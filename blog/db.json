{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/1","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514859106847},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1514859106846},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1514859106846},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1514859106846},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1514859106847},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1514859106846},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1514859106847},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1514859106847},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1514859106847},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1514859106847},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1514859106847},{"_id":"themes/next/README.cn.md","hash":"58ffe752bc4b7f0069fcd6304bbc2d5ff7b80f89","modified":1514859106847},{"_id":"themes/next/README.md","hash":"aa2fb15ef016074b10755323c99025df506d5ca3","modified":1514859106848},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1514859106848},{"_id":"themes/next/_config.yml","hash":"8a0e13ef39c5d9e7f7d1452f3a9295c59f0d6504","modified":1514859106848},{"_id":"themes/next/bower.json","hash":"6d6ae7531cf3fedc97c58cdad664f5793eb3cc88","modified":1514859106848},{"_id":"themes/next/package.json","hash":"93a74dbc0fe3a1208a02e9cec3c15c2375339cc1","modified":1514859106865},{"_id":"source/_posts/redis.md","hash":"a7da9695f2859d50a15409c210559a54fce4748e","modified":1522403857029},{"_id":"source/_posts/awk.md","hash":"453dbbf8e5540d5cc213e9aa546e5eeb87a15f85","modified":1514859106831},{"_id":"source/_posts/gitsubmoduleerror.md","hash":"87c9287331aeb5906d45dcadca47c42d673a4c2a","modified":1514859106832},{"_id":"source/_posts/grep.md","hash":"e129e107c230721c8b9cb86cb67532959be84479","modified":1514859106832},{"_id":"source/about/index.md","hash":"a3a524d271472c33b055f4dc955ca392aab61b61","modified":1514859106832},{"_id":"source/_posts/sed.md","hash":"328819a09f0f2d107180b231cb56f7ce7d6fb5e1","modified":1514859106832},{"_id":"source/_posts/talkbar.md","hash":"5ddb444049daa8ebce51ca8bae5efe88986db805","modified":1514859106832},{"_id":"source/categories/index.md","hash":"b260df54090e34b893830c6874e68d8a16acbc0b","modified":1514859106832},{"_id":"source/tags/index.md","hash":"2676e0a3e83d821bdb6219b52634a0b08b8278ee","modified":1514859106832},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1514859106846},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1514859106846},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1514859106846},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1514859106846},{"_id":"themes/next/scripts/merge-configs.js","hash":"cb617ddf692f56e6b6129564d52e302f50b28243","modified":1514859106866},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1514859106866},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1514859106850},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1514859106864},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1514859106864},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1514859106865},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1514859106865},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1514859106865},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1514859106865},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1514859106865},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1514859106848},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1514859106848},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1514859106848},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1514859106849},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1514859106849},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1514859106849},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1514859106849},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1514859106849},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1514859106849},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1514859106849},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1514859106849},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1514859106849},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1514859106850},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1514859106850},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1514859106850},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1514859106850},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1514859106923},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1514859106923},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1514859106923},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514859106889},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1514859106866},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1514859106866},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1514859106867},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1514859106867},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1514859106867},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1514859106867},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1514859106867},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1514859106867},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1514859106868},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1514859106850},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1514859106850},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1514859106850},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1514859106851},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1514859106851},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1514859106851},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1514859106851},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1514859106851},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1514859106851},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1514859106851},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1514859106852},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1514859106851},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1514859106852},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1514859106853},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1514859106853},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1514859106856},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1514859106856},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1514859106857},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1514859106862},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1514859106862},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1514859106862},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1514859106862},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1514859106862},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1514859106863},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1514859106863},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1514859106888},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1514859106889},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1514859106890},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1514859106889},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1514859106890},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1514859106889},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1514859106890},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1514859106890},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1514859106890},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1514859106890},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1514859106891},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1514859106891},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1514859106891},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1514859106891},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1514859106891},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1514859106891},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1514859106892},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1514859106892},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1514859106891},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514859106857},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514859106857},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514859106882},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514859106882},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514859106883},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514859106888},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514859106888},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1514859106852},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1514859106853},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1514859106852},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1514859106853},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1514859106853},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1514859106854},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1514859106854},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1514859106855},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1514859106854},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1514859106856},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1514859106856},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1514859106857},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1514859106858},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1514859106858},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1514859106858},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1514859106859},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1514859106859},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1514859106859},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1514859106859},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1514859106859},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1514859106859},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1514859106860},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1514859106860},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1514859106860},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1514859106860},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1514859106860},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1514859106860},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1514859106861},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1514859106861},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1514859106861},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1514859106861},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1514859106861},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1514859106861},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1514859106862},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1514859106863},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1514859106864},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1514859106864},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1514859106864},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1514859106882},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1514859106882},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1514859106882},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1514859106882},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1514859106888},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1514859106888},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1514859106888},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1514859106888},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1514859106892},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1514859106892},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1514859106893},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1514859106893},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1514859106893},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1514859106894},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1514859106894},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1514859106893},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1514859106894},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1514859106894},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1514859106894},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1514859106899},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1514859106901},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1514859106902},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1514859106902},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1514859106902},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1514859106902},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1514859106902},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1514859106903},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1514859106903},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1514859106903},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1514859106899},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1514859106897},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1514859106908},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1514859106909},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1514859106909},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1514859106909},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1514859106909},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1514859106909},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1514859106909},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1514859106919},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1514859106919},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1514859106922},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1514859106922},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1514859106921},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1514859106910},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1514859106910},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1514859106910},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1514859106916},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1514859106916},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1514859106911},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1514859106912},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1514859106916},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1514859106912},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1514859106912},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1514859106913},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1514859106913},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1514859106914},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1514859106914},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1514859106915},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1514859106915},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1514859106915},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1514859106915},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1514859106915},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1514859106916},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1514859106908},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1514859106863},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1514859106863},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1514859106868},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1514859106868},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1514859106880},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1514859106868},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1514859106868},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1514859106868},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1514859106871},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1514859106874},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1514859106880},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1514859106880},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1514859106880},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1514859106880},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1514859106881},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1514859106881},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1514859106883},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1514859106884},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1514859106884},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1514859106884},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1514859106885},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1514859106885},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1514859106886},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1514859106886},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1514859106886},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1514859106886},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"02fb8fa6b6c252b6bed469539cd057716606a787","modified":1514859106886},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1514859106886},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1514859106887},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1514859106887},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1514859106887},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1514859106887},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1514859106888},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1514859106888},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1514859106888},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1514859106894},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1514859106896},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1514859106897},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1514859106897},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1514859106899},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1514859106899},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1514859106899},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1514859106899},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1514859106900},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1514859106900},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1514859106901},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1514859106901},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1514859106902},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1514859106901},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1514859106902},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1514859106903},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1514859106904},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1514859106903},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1514859106919},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1514859106919},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1514859106896},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1514859106907},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1514859106920},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1514859106908},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1514859106869},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1514859106869},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1514859106869},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1514859106869},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1514859106869},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1514859106869},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1514859106870},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1514859106870},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1514859106870},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1514859106870},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1514859106870},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1514859106870},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1514859106870},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1514859106870},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1514859106873},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1514859106873},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1514859106873},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1514859106873},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1514859106873},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1514859106873},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1514859106873},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1514859106874},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1514859106874},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1514859106874},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1514859106871},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1514859106871},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1514859106871},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1514859106871},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1514859106871},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1514859106871},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1514859106871},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1514859106872},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1514859106872},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1514859106872},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1514859106872},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1514859106872},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1514859106872},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1514859106872},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1514859106872},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1514859106875},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1514859106875},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1514859106875},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1514859106875},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1514859106876},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1514859106876},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1514859106876},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1514859106877},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1514859106877},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1514859106877},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1514859106878},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1514859106878},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1514859106878},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1514859106878},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1514859106878},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1514859106879},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1514859106879},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1514859106879},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1514859106879},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1514859106886},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1514859106886},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1514859106887},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1514859106895},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1514859106895},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1514859106895},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1514859106896},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1514859106895},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1514859106900},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1514859106900},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1514859106900},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1514859106900},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1514859106901},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1514859106900},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1514859106904},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1514859106907},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1514859106906},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1514859106899},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1514859106918},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1514859106907}],"Category":[{"name":"PHP","_id":"cjf0wg9ne0002v1tzg6h7d6lj"},{"name":"Linux","_id":"cjf0wg9ng0004v1tzkabrvmqb"},{"name":"stackoverflow","_id":"cjf0wg9o6000jv1tz8pz4yafd"},{"name":"随便说说","_id":"cjf0wg9o8000pv1tzkrynm39g"}],"Data":[],"Page":[{"title":"about","date":"2017-12-29T15:39:08.000Z","type":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-12-29 23:39:08\ntype: \"about\"\n---\n","updated":"2018-01-02T02:11:46.832Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjf0wg9o3000dv1tz4q4wj1uo","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2017-12-29T15:37:54.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-12-29 23:37:54\ntype: \"categories\"\n---\n","updated":"2018-01-02T02:11:46.832Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjf0wg9o4000fv1tz79dja4mw","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2017-12-29T15:34:00.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-12-29 23:34:00\ntype: \"tags\"\n---\n","updated":"2018-01-02T02:11:46.832Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjf0wg9o5000iv1tzklyhssv6","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"redis常见知识点总结","date":"2018-03-21T09:40:25.000Z","_content":"由于redis在项目中的广泛使用，几乎所有的后端技术都会受用到redis，一直以来也没有总结过，今天，算是总结一下redis的常用知识点，对于自己的了解巩固下吧。\n<!--more-->\n\n## redis常用的数据结构\n\n字符串string、哈希表hash、链表list、集合set、有序集合sorted set\n\n### string字符串类型\n\n>使用场景\n\n1. 字符串类型是redis最基础的数据结构，他最经典的使用场景是作为数据缓存层，mysql或者其他db作为落地存储层，绝大部分的请求是都在redis缓存层中获取，所以能降低后端的压力和加速拉取速度。\n2. 许多计数需求也会使用redis string来计数，可有实现高并发下的快速计数功能\n\n>常用命令\n\nset 直接将指定的key设置字符串value，如果该key已经存在则覆盖其原有的值\n\n```\n#将key=value对应存储\nset key value \n```\n\nget 获取指定key的value\n\n```\nget key\n```\n\nappend 给指定的key的value追加一个string\n\n```\n##给指定的key的value后面追加一个.bak 为value.bak\nappend key .bak \n```\n\nmget,mset 批量设置和获取\n\n```\n#批量设置\nmset key1 value1 key2 value2 key3 value3 ....\n\n#批量获取 返回指定的key的value\nmget key1 key2 key3....\n\n```\n\nDECR将key值减一操作如果该key不存在默认初始化为0后减一操作\nINCR将key值加一操作如果该key不存在默认初始化为0后加一操作\n\n```\n# -1\nDECR key \n# +1\nINCR KEY\n```\n\n### Hash 哈希表\n\n>使用场景\n\n主要使用储存对象信息，不需要将对象序列化存储后再反序列化后修改在存储，直接使用hash存储的hashmap存储可以减少开销，同时维护起来也比较方便\n\n>常用命令\n\nHset命令用于为哈希表中的字段赋值 。如果哈希表不存在，一个新的哈希表被创建并进行 HSET 操作。如果字段已经存在于哈希表中，旧值将被覆盖。如果字段是哈希表中的一个新建字段，并且值设置成功，返回 1 ，如果哈希表中域字段已经存在且旧值已被新值覆盖，返回 0 \n\n```\nHSET KEY FIELD VALUE \n```\n\nHget 命令用于返回哈希表中指定字段的值,返回给定字段的值。如果给定的字段或 key 不存在时，返回 nil \nHgetall 用于返回哈希表中，所有的字段和值在返回值里，紧跟每个字段名(field name)之后是字段的值(value)\n\n```\nHGET myhashkey\n\nHGETALL myhashkey\n\n```\n\n其他命令 :\nkey field1 \\[field2\\] 删除HDEL \nHEXISTS key field 查看哈希表 key 中，指定的字段是否存在。\nHINCRBY key field increment 为哈希表 key 中的指定字段的整数值加上增量 increment 。如果哈希表不存在，一个新的哈希表被创建并进行\n\n### List \n\n>使用场景\n\nlist的使用场景很多主要的有几种一个是存储消息，列表之类的，比如最新消息，关注列表等还有一个比较重要的就是消息队列使用\n\n>常用命令\n\n```\n#将一个或多个值插入到列表头部\nLPUSH/RPUSH key value1 [value2] \n\n#移出并获取列表的第一个元素\nLPOP/RPOP key \n\n#获取列表长度\nLLEN key \n\n```\n\n\n### Set\n\n>使用场景\n\nset的功能和list十分类似，set的特殊之处在于在对于内部的值会进行排重功能，同时还可以判断改值是否在这个集合当中，可以用户关注 粉丝等一些应用中\n\n>常用命令\n\n```\n\n#向集合添加一个或多个成员\nSADD key member1 [member2] \n\n#移除并返回集合中的一个随机元素\nSPOP key \n\n#返回集合中的所有成员\nSMEMBERS key \n\n#返回所有给定集合的并集\nSUNION key1 [key2] \n\n#移除集合中一个或多个成员\nSREM key member1 [member2] \n```\n\n### Sorted Set\n\n>使用场景\n\nSorted Set和set是类似的，但是不同之处在于Sorted Set提供一个score参数来为成员排序，并且插入的数据都是有序的，可以应用为时间线等应用\n\n>常用命令\n\n```\n#向有序集合添加一个或多个成员，或者更新已存在成员的分数\nZADD key score1 member1 [score2 member2] \n\n#通过索引区间返回有序集合成指定区间内的成员\nZRANGE key start stop [WITHSCORES]\n\n#移除有序集合中的一个或多个成员\nZREM key member [member ...] \n\n#返回有序集中，成员的分数值\nZSCORE key member \n```\n\n\n","source":"_posts/redis.md","raw":"---\ntitle: redis常见知识点总结\ndate: 2018-03-21 17:40:25\ntags: [redis,PHP]\ncategories: PHP\n---\n由于redis在项目中的广泛使用，几乎所有的后端技术都会受用到redis，一直以来也没有总结过，今天，算是总结一下redis的常用知识点，对于自己的了解巩固下吧。\n<!--more-->\n\n## redis常用的数据结构\n\n字符串string、哈希表hash、链表list、集合set、有序集合sorted set\n\n### string字符串类型\n\n>使用场景\n\n1. 字符串类型是redis最基础的数据结构，他最经典的使用场景是作为数据缓存层，mysql或者其他db作为落地存储层，绝大部分的请求是都在redis缓存层中获取，所以能降低后端的压力和加速拉取速度。\n2. 许多计数需求也会使用redis string来计数，可有实现高并发下的快速计数功能\n\n>常用命令\n\nset 直接将指定的key设置字符串value，如果该key已经存在则覆盖其原有的值\n\n```\n#将key=value对应存储\nset key value \n```\n\nget 获取指定key的value\n\n```\nget key\n```\n\nappend 给指定的key的value追加一个string\n\n```\n##给指定的key的value后面追加一个.bak 为value.bak\nappend key .bak \n```\n\nmget,mset 批量设置和获取\n\n```\n#批量设置\nmset key1 value1 key2 value2 key3 value3 ....\n\n#批量获取 返回指定的key的value\nmget key1 key2 key3....\n\n```\n\nDECR将key值减一操作如果该key不存在默认初始化为0后减一操作\nINCR将key值加一操作如果该key不存在默认初始化为0后加一操作\n\n```\n# -1\nDECR key \n# +1\nINCR KEY\n```\n\n### Hash 哈希表\n\n>使用场景\n\n主要使用储存对象信息，不需要将对象序列化存储后再反序列化后修改在存储，直接使用hash存储的hashmap存储可以减少开销，同时维护起来也比较方便\n\n>常用命令\n\nHset命令用于为哈希表中的字段赋值 。如果哈希表不存在，一个新的哈希表被创建并进行 HSET 操作。如果字段已经存在于哈希表中，旧值将被覆盖。如果字段是哈希表中的一个新建字段，并且值设置成功，返回 1 ，如果哈希表中域字段已经存在且旧值已被新值覆盖，返回 0 \n\n```\nHSET KEY FIELD VALUE \n```\n\nHget 命令用于返回哈希表中指定字段的值,返回给定字段的值。如果给定的字段或 key 不存在时，返回 nil \nHgetall 用于返回哈希表中，所有的字段和值在返回值里，紧跟每个字段名(field name)之后是字段的值(value)\n\n```\nHGET myhashkey\n\nHGETALL myhashkey\n\n```\n\n其他命令 :\nkey field1 \\[field2\\] 删除HDEL \nHEXISTS key field 查看哈希表 key 中，指定的字段是否存在。\nHINCRBY key field increment 为哈希表 key 中的指定字段的整数值加上增量 increment 。如果哈希表不存在，一个新的哈希表被创建并进行\n\n### List \n\n>使用场景\n\nlist的使用场景很多主要的有几种一个是存储消息，列表之类的，比如最新消息，关注列表等还有一个比较重要的就是消息队列使用\n\n>常用命令\n\n```\n#将一个或多个值插入到列表头部\nLPUSH/RPUSH key value1 [value2] \n\n#移出并获取列表的第一个元素\nLPOP/RPOP key \n\n#获取列表长度\nLLEN key \n\n```\n\n\n### Set\n\n>使用场景\n\nset的功能和list十分类似，set的特殊之处在于在对于内部的值会进行排重功能，同时还可以判断改值是否在这个集合当中，可以用户关注 粉丝等一些应用中\n\n>常用命令\n\n```\n\n#向集合添加一个或多个成员\nSADD key member1 [member2] \n\n#移除并返回集合中的一个随机元素\nSPOP key \n\n#返回集合中的所有成员\nSMEMBERS key \n\n#返回所有给定集合的并集\nSUNION key1 [key2] \n\n#移除集合中一个或多个成员\nSREM key member1 [member2] \n```\n\n### Sorted Set\n\n>使用场景\n\nSorted Set和set是类似的，但是不同之处在于Sorted Set提供一个score参数来为成员排序，并且插入的数据都是有序的，可以应用为时间线等应用\n\n>常用命令\n\n```\n#向有序集合添加一个或多个成员，或者更新已存在成员的分数\nZADD key score1 member1 [score2 member2] \n\n#通过索引区间返回有序集合成指定区间内的成员\nZRANGE key start stop [WITHSCORES]\n\n#移除有序集合中的一个或多个成员\nZREM key member [member ...] \n\n#返回有序集中，成员的分数值\nZSCORE key member \n```\n\n\n","slug":"redis","published":1,"updated":"2018-04-03T02:47:04.420Z","_id":"cjf0wg9n80000v1tziar3a0gn","comments":1,"layout":"post","photos":[],"link":"","content":"<p>由于redis在项目中的广泛使用，几乎所有的后端技术都会受用到redis，一直以来也没有总结过，今天，算是总结一下redis的常用知识点，对于自己的了解巩固下吧。<br><a id=\"more\"></a></p>\n<h2 id=\"redis常用的数据结构\"><a href=\"#redis常用的数据结构\" class=\"headerlink\" title=\"redis常用的数据结构\"></a>redis常用的数据结构</h2><p>字符串string、哈希表hash、链表list、集合set、有序集合sorted set</p>\n<h3 id=\"string字符串类型\"><a href=\"#string字符串类型\" class=\"headerlink\" title=\"string字符串类型\"></a>string字符串类型</h3><blockquote>\n<p>使用场景</p>\n</blockquote>\n<ol>\n<li>字符串类型是redis最基础的数据结构，他最经典的使用场景是作为数据缓存层，mysql或者其他db作为落地存储层，绝大部分的请求是都在redis缓存层中获取，所以能降低后端的压力和加速拉取速度。</li>\n<li>许多计数需求也会使用redis string来计数，可有实现高并发下的快速计数功能</li>\n</ol>\n<blockquote>\n<p>常用命令</p>\n</blockquote>\n<p>set 直接将指定的key设置字符串value，如果该key已经存在则覆盖其原有的值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#将key=value对应存储</span><br><span class=\"line\">set key value</span><br></pre></td></tr></table></figure>\n<p>get 获取指定key的value</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">get key</span><br></pre></td></tr></table></figure>\n<p>append 给指定的key的value追加一个string</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##给指定的key的value后面追加一个.bak 为value.bak</span><br><span class=\"line\">append key .bak</span><br></pre></td></tr></table></figure>\n<p>mget,mset 批量设置和获取</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#批量设置</span><br><span class=\"line\">mset key1 value1 key2 value2 key3 value3 ....</span><br><span class=\"line\"></span><br><span class=\"line\">#批量获取 返回指定的key的value</span><br><span class=\"line\">mget key1 key2 key3....</span><br></pre></td></tr></table></figure>\n<p>DECR将key值减一操作如果该key不存在默认初始化为0后减一操作<br>INCR将key值加一操作如果该key不存在默认初始化为0后加一操作</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -1</span><br><span class=\"line\">DECR key </span><br><span class=\"line\"># +1</span><br><span class=\"line\">INCR KEY</span><br></pre></td></tr></table></figure>\n<h3 id=\"Hash-哈希表\"><a href=\"#Hash-哈希表\" class=\"headerlink\" title=\"Hash 哈希表\"></a>Hash 哈希表</h3><blockquote>\n<p>使用场景</p>\n</blockquote>\n<p>主要使用储存对象信息，不需要将对象序列化存储后再反序列化后修改在存储，直接使用hash存储的hashmap存储可以减少开销，同时维护起来也比较方便</p>\n<blockquote>\n<p>常用命令</p>\n</blockquote>\n<p>Hset命令用于为哈希表中的字段赋值 。如果哈希表不存在，一个新的哈希表被创建并进行 HSET 操作。如果字段已经存在于哈希表中，旧值将被覆盖。如果字段是哈希表中的一个新建字段，并且值设置成功，返回 1 ，如果哈希表中域字段已经存在且旧值已被新值覆盖，返回 0 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HSET KEY FIELD VALUE</span><br></pre></td></tr></table></figure>\n<p>Hget 命令用于返回哈希表中指定字段的值,返回给定字段的值。如果给定的字段或 key 不存在时，返回 nil<br>Hgetall 用于返回哈希表中，所有的字段和值在返回值里，紧跟每个字段名(field name)之后是字段的值(value)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HGET myhashkey</span><br><span class=\"line\"></span><br><span class=\"line\">HGETALL myhashkey</span><br></pre></td></tr></table></figure>\n<p>其他命令 :<br>key field1 [field2] 删除HDEL<br>HEXISTS key field 查看哈希表 key 中，指定的字段是否存在。<br>HINCRBY key field increment 为哈希表 key 中的指定字段的整数值加上增量 increment 。如果哈希表不存在，一个新的哈希表被创建并进行</p>\n<h3 id=\"List\"><a href=\"#List\" class=\"headerlink\" title=\"List\"></a>List</h3><blockquote>\n<p>使用场景</p>\n</blockquote>\n<p>list的使用场景很多主要的有几种一个是存储消息，列表之类的，比如最新消息，关注列表等还有一个比较重要的就是消息队列使用</p>\n<blockquote>\n<p>常用命令</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#将一个或多个值插入到列表头部</span><br><span class=\"line\">LPUSH/RPUSH key value1 [value2] </span><br><span class=\"line\"></span><br><span class=\"line\">#移出并获取列表的第一个元素</span><br><span class=\"line\">LPOP/RPOP key </span><br><span class=\"line\"></span><br><span class=\"line\">#获取列表长度</span><br><span class=\"line\">LLEN key</span><br></pre></td></tr></table></figure>\n<h3 id=\"Set\"><a href=\"#Set\" class=\"headerlink\" title=\"Set\"></a>Set</h3><blockquote>\n<p>使用场景</p>\n</blockquote>\n<p>set的功能和list十分类似，set的特殊之处在于在对于内部的值会进行排重功能，同时还可以判断改值是否在这个集合当中，可以用户关注 粉丝等一些应用中</p>\n<blockquote>\n<p>常用命令</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#向集合添加一个或多个成员</span><br><span class=\"line\">SADD key member1 [member2] </span><br><span class=\"line\"></span><br><span class=\"line\">#移除并返回集合中的一个随机元素</span><br><span class=\"line\">SPOP key </span><br><span class=\"line\"></span><br><span class=\"line\">#返回集合中的所有成员</span><br><span class=\"line\">SMEMBERS key </span><br><span class=\"line\"></span><br><span class=\"line\">#返回所有给定集合的并集</span><br><span class=\"line\">SUNION key1 [key2] </span><br><span class=\"line\"></span><br><span class=\"line\">#移除集合中一个或多个成员</span><br><span class=\"line\">SREM key member1 [member2]</span><br></pre></td></tr></table></figure>\n<h3 id=\"Sorted-Set\"><a href=\"#Sorted-Set\" class=\"headerlink\" title=\"Sorted Set\"></a>Sorted Set</h3><blockquote>\n<p>使用场景</p>\n</blockquote>\n<p>Sorted Set和set是类似的，但是不同之处在于Sorted Set提供一个score参数来为成员排序，并且插入的数据都是有序的，可以应用为时间线等应用</p>\n<blockquote>\n<p>常用命令</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#向有序集合添加一个或多个成员，或者更新已存在成员的分数</span><br><span class=\"line\">ZADD key score1 member1 [score2 member2] </span><br><span class=\"line\"></span><br><span class=\"line\">#通过索引区间返回有序集合成指定区间内的成员</span><br><span class=\"line\">ZRANGE key start stop [WITHSCORES]</span><br><span class=\"line\"></span><br><span class=\"line\">#移除有序集合中的一个或多个成员</span><br><span class=\"line\">ZREM key member [member ...] </span><br><span class=\"line\"></span><br><span class=\"line\">#返回有序集中，成员的分数值</span><br><span class=\"line\">ZSCORE key member</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>由于redis在项目中的广泛使用，几乎所有的后端技术都会受用到redis，一直以来也没有总结过，今天，算是总结一下redis的常用知识点，对于自己的了解巩固下吧。<br>","more":"</p>\n<h2 id=\"redis常用的数据结构\"><a href=\"#redis常用的数据结构\" class=\"headerlink\" title=\"redis常用的数据结构\"></a>redis常用的数据结构</h2><p>字符串string、哈希表hash、链表list、集合set、有序集合sorted set</p>\n<h3 id=\"string字符串类型\"><a href=\"#string字符串类型\" class=\"headerlink\" title=\"string字符串类型\"></a>string字符串类型</h3><blockquote>\n<p>使用场景</p>\n</blockquote>\n<ol>\n<li>字符串类型是redis最基础的数据结构，他最经典的使用场景是作为数据缓存层，mysql或者其他db作为落地存储层，绝大部分的请求是都在redis缓存层中获取，所以能降低后端的压力和加速拉取速度。</li>\n<li>许多计数需求也会使用redis string来计数，可有实现高并发下的快速计数功能</li>\n</ol>\n<blockquote>\n<p>常用命令</p>\n</blockquote>\n<p>set 直接将指定的key设置字符串value，如果该key已经存在则覆盖其原有的值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#将key=value对应存储</span><br><span class=\"line\">set key value</span><br></pre></td></tr></table></figure>\n<p>get 获取指定key的value</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">get key</span><br></pre></td></tr></table></figure>\n<p>append 给指定的key的value追加一个string</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##给指定的key的value后面追加一个.bak 为value.bak</span><br><span class=\"line\">append key .bak</span><br></pre></td></tr></table></figure>\n<p>mget,mset 批量设置和获取</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#批量设置</span><br><span class=\"line\">mset key1 value1 key2 value2 key3 value3 ....</span><br><span class=\"line\"></span><br><span class=\"line\">#批量获取 返回指定的key的value</span><br><span class=\"line\">mget key1 key2 key3....</span><br></pre></td></tr></table></figure>\n<p>DECR将key值减一操作如果该key不存在默认初始化为0后减一操作<br>INCR将key值加一操作如果该key不存在默认初始化为0后加一操作</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -1</span><br><span class=\"line\">DECR key </span><br><span class=\"line\"># +1</span><br><span class=\"line\">INCR KEY</span><br></pre></td></tr></table></figure>\n<h3 id=\"Hash-哈希表\"><a href=\"#Hash-哈希表\" class=\"headerlink\" title=\"Hash 哈希表\"></a>Hash 哈希表</h3><blockquote>\n<p>使用场景</p>\n</blockquote>\n<p>主要使用储存对象信息，不需要将对象序列化存储后再反序列化后修改在存储，直接使用hash存储的hashmap存储可以减少开销，同时维护起来也比较方便</p>\n<blockquote>\n<p>常用命令</p>\n</blockquote>\n<p>Hset命令用于为哈希表中的字段赋值 。如果哈希表不存在，一个新的哈希表被创建并进行 HSET 操作。如果字段已经存在于哈希表中，旧值将被覆盖。如果字段是哈希表中的一个新建字段，并且值设置成功，返回 1 ，如果哈希表中域字段已经存在且旧值已被新值覆盖，返回 0 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HSET KEY FIELD VALUE</span><br></pre></td></tr></table></figure>\n<p>Hget 命令用于返回哈希表中指定字段的值,返回给定字段的值。如果给定的字段或 key 不存在时，返回 nil<br>Hgetall 用于返回哈希表中，所有的字段和值在返回值里，紧跟每个字段名(field name)之后是字段的值(value)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HGET myhashkey</span><br><span class=\"line\"></span><br><span class=\"line\">HGETALL myhashkey</span><br></pre></td></tr></table></figure>\n<p>其他命令 :<br>key field1 [field2] 删除HDEL<br>HEXISTS key field 查看哈希表 key 中，指定的字段是否存在。<br>HINCRBY key field increment 为哈希表 key 中的指定字段的整数值加上增量 increment 。如果哈希表不存在，一个新的哈希表被创建并进行</p>\n<h3 id=\"List\"><a href=\"#List\" class=\"headerlink\" title=\"List\"></a>List</h3><blockquote>\n<p>使用场景</p>\n</blockquote>\n<p>list的使用场景很多主要的有几种一个是存储消息，列表之类的，比如最新消息，关注列表等还有一个比较重要的就是消息队列使用</p>\n<blockquote>\n<p>常用命令</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#将一个或多个值插入到列表头部</span><br><span class=\"line\">LPUSH/RPUSH key value1 [value2] </span><br><span class=\"line\"></span><br><span class=\"line\">#移出并获取列表的第一个元素</span><br><span class=\"line\">LPOP/RPOP key </span><br><span class=\"line\"></span><br><span class=\"line\">#获取列表长度</span><br><span class=\"line\">LLEN key</span><br></pre></td></tr></table></figure>\n<h3 id=\"Set\"><a href=\"#Set\" class=\"headerlink\" title=\"Set\"></a>Set</h3><blockquote>\n<p>使用场景</p>\n</blockquote>\n<p>set的功能和list十分类似，set的特殊之处在于在对于内部的值会进行排重功能，同时还可以判断改值是否在这个集合当中，可以用户关注 粉丝等一些应用中</p>\n<blockquote>\n<p>常用命令</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#向集合添加一个或多个成员</span><br><span class=\"line\">SADD key member1 [member2] </span><br><span class=\"line\"></span><br><span class=\"line\">#移除并返回集合中的一个随机元素</span><br><span class=\"line\">SPOP key </span><br><span class=\"line\"></span><br><span class=\"line\">#返回集合中的所有成员</span><br><span class=\"line\">SMEMBERS key </span><br><span class=\"line\"></span><br><span class=\"line\">#返回所有给定集合的并集</span><br><span class=\"line\">SUNION key1 [key2] </span><br><span class=\"line\"></span><br><span class=\"line\">#移除集合中一个或多个成员</span><br><span class=\"line\">SREM key member1 [member2]</span><br></pre></td></tr></table></figure>\n<h3 id=\"Sorted-Set\"><a href=\"#Sorted-Set\" class=\"headerlink\" title=\"Sorted Set\"></a>Sorted Set</h3><blockquote>\n<p>使用场景</p>\n</blockquote>\n<p>Sorted Set和set是类似的，但是不同之处在于Sorted Set提供一个score参数来为成员排序，并且插入的数据都是有序的，可以应用为时间线等应用</p>\n<blockquote>\n<p>常用命令</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#向有序集合添加一个或多个成员，或者更新已存在成员的分数</span><br><span class=\"line\">ZADD key score1 member1 [score2 member2] </span><br><span class=\"line\"></span><br><span class=\"line\">#通过索引区间返回有序集合成指定区间内的成员</span><br><span class=\"line\">ZRANGE key start stop [WITHSCORES]</span><br><span class=\"line\"></span><br><span class=\"line\">#移除有序集合中的一个或多个成员</span><br><span class=\"line\">ZREM key member [member ...] </span><br><span class=\"line\"></span><br><span class=\"line\">#返回有序集中，成员的分数值</span><br><span class=\"line\">ZSCORE key member</span><br></pre></td></tr></table></figure>"},{"title":"Linux三剑客之awk","date":"2017-12-20T08:10:25.000Z","_content":"因为经常使用awk，这次抽出时间把awk总结一下，正好使用了hexo，就准备写一篇吧，下面是搜搜到的说明：\nawk是一种编程语言，用于在linux/unix下对文本和数据进行处理。数据可以来自标准输入(stdin)、一个或多个文件，或其它命令的输出。它支持用户自定义函数和动态正则表达式等先进功能，是linux/unix下的一个强大编程工具。它在命令行中使用，但更多是作为脚本来使用。awk有很多内建的功能，比如数组、函数等，这是它和C语言的相同之处，灵活性是awk最大的优势\n<!--more-->\n\n## 命令格式\n\n>awk [-F|-f|-v] 'BEGIN{} // {command1; command2} END{}' file\n\n执行流程是读取文件的时候先执行BEGIN初始代码块的内容->执行`//`里的匹配代码块，这里可以是字符串或者正则表达式->执行`{command1; command2}`里代码块，多条命令用；分隔->再执行END代码块里的命令。\n这里需要说明的事，BEGIN和END模块都是可以单独存在的，在BEGIN模块中主要是对一个变量的赋值初始化定义。\n在`\\\\`匹配代码块中 纯字符匹配：`\\string\\` ，纯字符不匹配：`!\\string\\` ，字段匹配`~\\string1\\` ，字段不匹配：`!~\\string1|string2\\`。字段匹配的一般都是`$n ~ /string/` $n表示某段，$1整段或的其他段 \n同时在`{}`的结构体中还可以使用`if`里的条件条件，使用`（）`包裹起来\n\n\n## 常用参数\n\n1. -F 置顶分隔符，它可以是一个字符串或者正则 单个可以直接使用`-F:` 或者`-F ':'` 多个分隔符用`[]`包含 如：`[#:/]`\n\n\n\n## 需要说明的点\n\n在awk中有很多内置的变量都有这不同含义，也会方便简化我们的一个操作\n1. NF 字段数量变量 $NF则表示最后一位 当然$(NF-1)表示倒数第二个 如同$0表示当前行 $1表示每行的第一个字段\n2. NR 每行的行号\n3. OFS 输出域分隔符，主要使用在BEGIN中定义 H\n4. print 打印命令\n\n## 实例\n\n```\n#以分隔符 ：打印第一列\nawk -F: '{print $1}' /etc/passwd\n\n#以：和\\分隔打印第一第二列并且以*分隔符分隔\nawk -F \"[:/]\" '{print $1,$2}' OFS=\"*\" /etc/passwd\n\n#查看有多少个字段和输出最后一位\nawk -F \":\" '{print NF,$NF}' /etc/passwd\n\n#输入字段大于6的最后一位\nawk -F \":\" 'NF>6{print NF,$NF}' /etc/passwd\n\n#查找含有root的行\nawk '/root/{print $0}' /etc/passwd\n\n#查找不含root的行\nawk '!/root/{print $0}' /etc/passwd\n\n#匹配含有多字段的行\nawk '/root|mysql/{print $0}' /etc/passwd\n\n#匹配两个查找字段之间的行\nawk '/root/,/db/{print $0}' /etc/passwd\n\n//第一个字段匹配wang才显示\nawk -F: '$1~/wang/' /etc/passwd\n\n#匹配是也可以使用正则表达式\nawk '/^w/' /etc/passwd\n\n#第一段中不含有root的行\nawk '{if($1!~/root/)print $0}' /etc/passwd\n\n#只显示一行\nseq 1 5 | awk 'NR==1 {print}'\n\n#if ... else ...查找一个段包含fpsd打印出来没有的打印 not found\nawk -F: '{if ($1~/fpsd/) {print $1} else {print \"not found\"} }' /etc/passwd\n\n#查找第三行是否大于100并且记录总数\nawk -F: 'BEGIN {A=0;B=0}{if($3>100){A++;print \"biger\"} else {B++;print \"small\"}} END{print A,\"\\t\",B}' /etc/passwd\n\n#当前目录中文件的大小\nls -l|awk 'BEGIN{total=0}!/^d/{total+=$5}END{print total/1024/1024,\"MB\"}'\n```\n\n\n\n","source":"_posts/awk.md","raw":"---\ntitle: Linux三剑客之awk\ndate: 2017-12-20 16:10:25\ntags: [linux,awk]\ncategories: Linux\n---\n因为经常使用awk，这次抽出时间把awk总结一下，正好使用了hexo，就准备写一篇吧，下面是搜搜到的说明：\nawk是一种编程语言，用于在linux/unix下对文本和数据进行处理。数据可以来自标准输入(stdin)、一个或多个文件，或其它命令的输出。它支持用户自定义函数和动态正则表达式等先进功能，是linux/unix下的一个强大编程工具。它在命令行中使用，但更多是作为脚本来使用。awk有很多内建的功能，比如数组、函数等，这是它和C语言的相同之处，灵活性是awk最大的优势\n<!--more-->\n\n## 命令格式\n\n>awk [-F|-f|-v] 'BEGIN{} // {command1; command2} END{}' file\n\n执行流程是读取文件的时候先执行BEGIN初始代码块的内容->执行`//`里的匹配代码块，这里可以是字符串或者正则表达式->执行`{command1; command2}`里代码块，多条命令用；分隔->再执行END代码块里的命令。\n这里需要说明的事，BEGIN和END模块都是可以单独存在的，在BEGIN模块中主要是对一个变量的赋值初始化定义。\n在`\\\\`匹配代码块中 纯字符匹配：`\\string\\` ，纯字符不匹配：`!\\string\\` ，字段匹配`~\\string1\\` ，字段不匹配：`!~\\string1|string2\\`。字段匹配的一般都是`$n ~ /string/` $n表示某段，$1整段或的其他段 \n同时在`{}`的结构体中还可以使用`if`里的条件条件，使用`（）`包裹起来\n\n\n## 常用参数\n\n1. -F 置顶分隔符，它可以是一个字符串或者正则 单个可以直接使用`-F:` 或者`-F ':'` 多个分隔符用`[]`包含 如：`[#:/]`\n\n\n\n## 需要说明的点\n\n在awk中有很多内置的变量都有这不同含义，也会方便简化我们的一个操作\n1. NF 字段数量变量 $NF则表示最后一位 当然$(NF-1)表示倒数第二个 如同$0表示当前行 $1表示每行的第一个字段\n2. NR 每行的行号\n3. OFS 输出域分隔符，主要使用在BEGIN中定义 H\n4. print 打印命令\n\n## 实例\n\n```\n#以分隔符 ：打印第一列\nawk -F: '{print $1}' /etc/passwd\n\n#以：和\\分隔打印第一第二列并且以*分隔符分隔\nawk -F \"[:/]\" '{print $1,$2}' OFS=\"*\" /etc/passwd\n\n#查看有多少个字段和输出最后一位\nawk -F \":\" '{print NF,$NF}' /etc/passwd\n\n#输入字段大于6的最后一位\nawk -F \":\" 'NF>6{print NF,$NF}' /etc/passwd\n\n#查找含有root的行\nawk '/root/{print $0}' /etc/passwd\n\n#查找不含root的行\nawk '!/root/{print $0}' /etc/passwd\n\n#匹配含有多字段的行\nawk '/root|mysql/{print $0}' /etc/passwd\n\n#匹配两个查找字段之间的行\nawk '/root/,/db/{print $0}' /etc/passwd\n\n//第一个字段匹配wang才显示\nawk -F: '$1~/wang/' /etc/passwd\n\n#匹配是也可以使用正则表达式\nawk '/^w/' /etc/passwd\n\n#第一段中不含有root的行\nawk '{if($1!~/root/)print $0}' /etc/passwd\n\n#只显示一行\nseq 1 5 | awk 'NR==1 {print}'\n\n#if ... else ...查找一个段包含fpsd打印出来没有的打印 not found\nawk -F: '{if ($1~/fpsd/) {print $1} else {print \"not found\"} }' /etc/passwd\n\n#查找第三行是否大于100并且记录总数\nawk -F: 'BEGIN {A=0;B=0}{if($3>100){A++;print \"biger\"} else {B++;print \"small\"}} END{print A,\"\\t\",B}' /etc/passwd\n\n#当前目录中文件的大小\nls -l|awk 'BEGIN{total=0}!/^d/{total+=$5}END{print total/1024/1024,\"MB\"}'\n```\n\n\n\n","slug":"awk","published":1,"updated":"2018-01-02T02:11:46.831Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjf0wg9nc0001v1tzd1xoe8ht","content":"<p>因为经常使用awk，这次抽出时间把awk总结一下，正好使用了hexo，就准备写一篇吧，下面是搜搜到的说明：<br>awk是一种编程语言，用于在linux/unix下对文本和数据进行处理。数据可以来自标准输入(stdin)、一个或多个文件，或其它命令的输出。它支持用户自定义函数和动态正则表达式等先进功能，是linux/unix下的一个强大编程工具。它在命令行中使用，但更多是作为脚本来使用。awk有很多内建的功能，比如数组、函数等，这是它和C语言的相同之处，灵活性是awk最大的优势<br><a id=\"more\"></a></p>\n<h2 id=\"命令格式\"><a href=\"#命令格式\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h2><blockquote>\n<p>awk [-F|-f|-v] ‘BEGIN{} // {command1; command2} END{}’ file</p>\n</blockquote>\n<p>执行流程是读取文件的时候先执行BEGIN初始代码块的内容-&gt;执行<code>//</code>里的匹配代码块，这里可以是字符串或者正则表达式-&gt;执行<code>{command1; command2}</code>里代码块，多条命令用；分隔-&gt;再执行END代码块里的命令。<br>这里需要说明的事，BEGIN和END模块都是可以单独存在的，在BEGIN模块中主要是对一个变量的赋值初始化定义。<br>在<code>\\\\</code>匹配代码块中 纯字符匹配：<code>\\string\\</code> ，纯字符不匹配：<code>!\\string\\</code> ，字段匹配<code>~\\string1\\</code> ，字段不匹配：<code>!~\\string1|string2\\</code>。字段匹配的一般都是<code>$n ~ /string/</code> $n表示某段，$1整段或的其他段<br>同时在<code>{}</code>的结构体中还可以使用<code>if</code>里的条件条件，使用<code>（）</code>包裹起来</p>\n<h2 id=\"常用参数\"><a href=\"#常用参数\" class=\"headerlink\" title=\"常用参数\"></a>常用参数</h2><ol>\n<li>-F 置顶分隔符，它可以是一个字符串或者正则 单个可以直接使用<code>-F:</code> 或者<code>-F &#39;:&#39;</code> 多个分隔符用<code>[]</code>包含 如：<code>[#:/]</code></li>\n</ol>\n<h2 id=\"需要说明的点\"><a href=\"#需要说明的点\" class=\"headerlink\" title=\"需要说明的点\"></a>需要说明的点</h2><p>在awk中有很多内置的变量都有这不同含义，也会方便简化我们的一个操作</p>\n<ol>\n<li>NF 字段数量变量 $NF则表示最后一位 当然$(NF-1)表示倒数第二个 如同$0表示当前行 $1表示每行的第一个字段</li>\n<li>NR 每行的行号</li>\n<li>OFS 输出域分隔符，主要使用在BEGIN中定义 H</li>\n<li>print 打印命令</li>\n</ol>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#以分隔符 ：打印第一列</span><br><span class=\"line\">awk -F: &apos;&#123;print $1&#125;&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#以：和\\分隔打印第一第二列并且以*分隔符分隔</span><br><span class=\"line\">awk -F &quot;[:/]&quot; &apos;&#123;print $1,$2&#125;&apos; OFS=&quot;*&quot; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#查看有多少个字段和输出最后一位</span><br><span class=\"line\">awk -F &quot;:&quot; &apos;&#123;print NF,$NF&#125;&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#输入字段大于6的最后一位</span><br><span class=\"line\">awk -F &quot;:&quot; &apos;NF&gt;6&#123;print NF,$NF&#125;&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#查找含有root的行</span><br><span class=\"line\">awk &apos;/root/&#123;print $0&#125;&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#查找不含root的行</span><br><span class=\"line\">awk &apos;!/root/&#123;print $0&#125;&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#匹配含有多字段的行</span><br><span class=\"line\">awk &apos;/root|mysql/&#123;print $0&#125;&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#匹配两个查找字段之间的行</span><br><span class=\"line\">awk &apos;/root/,/db/&#123;print $0&#125;&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">//第一个字段匹配wang才显示</span><br><span class=\"line\">awk -F: &apos;$1~/wang/&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#匹配是也可以使用正则表达式</span><br><span class=\"line\">awk &apos;/^w/&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#第一段中不含有root的行</span><br><span class=\"line\">awk &apos;&#123;if($1!~/root/)print $0&#125;&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#只显示一行</span><br><span class=\"line\">seq 1 5 | awk &apos;NR==1 &#123;print&#125;&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">#if ... else ...查找一个段包含fpsd打印出来没有的打印 not found</span><br><span class=\"line\">awk -F: &apos;&#123;if ($1~/fpsd/) &#123;print $1&#125; else &#123;print &quot;not found&quot;&#125; &#125;&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#查找第三行是否大于100并且记录总数</span><br><span class=\"line\">awk -F: &apos;BEGIN &#123;A=0;B=0&#125;&#123;if($3&gt;100)&#123;A++;print &quot;biger&quot;&#125; else &#123;B++;print &quot;small&quot;&#125;&#125; END&#123;print A,&quot;\\t&quot;,B&#125;&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#当前目录中文件的大小</span><br><span class=\"line\">ls -l|awk &apos;BEGIN&#123;total=0&#125;!/^d/&#123;total+=$5&#125;END&#123;print total/1024/1024,&quot;MB&quot;&#125;&apos;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>因为经常使用awk，这次抽出时间把awk总结一下，正好使用了hexo，就准备写一篇吧，下面是搜搜到的说明：<br>awk是一种编程语言，用于在linux/unix下对文本和数据进行处理。数据可以来自标准输入(stdin)、一个或多个文件，或其它命令的输出。它支持用户自定义函数和动态正则表达式等先进功能，是linux/unix下的一个强大编程工具。它在命令行中使用，但更多是作为脚本来使用。awk有很多内建的功能，比如数组、函数等，这是它和C语言的相同之处，灵活性是awk最大的优势<br>","more":"</p>\n<h2 id=\"命令格式\"><a href=\"#命令格式\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h2><blockquote>\n<p>awk [-F|-f|-v] ‘BEGIN{} // {command1; command2} END{}’ file</p>\n</blockquote>\n<p>执行流程是读取文件的时候先执行BEGIN初始代码块的内容-&gt;执行<code>//</code>里的匹配代码块，这里可以是字符串或者正则表达式-&gt;执行<code>{command1; command2}</code>里代码块，多条命令用；分隔-&gt;再执行END代码块里的命令。<br>这里需要说明的事，BEGIN和END模块都是可以单独存在的，在BEGIN模块中主要是对一个变量的赋值初始化定义。<br>在<code>\\\\</code>匹配代码块中 纯字符匹配：<code>\\string\\</code> ，纯字符不匹配：<code>!\\string\\</code> ，字段匹配<code>~\\string1\\</code> ，字段不匹配：<code>!~\\string1|string2\\</code>。字段匹配的一般都是<code>$n ~ /string/</code> $n表示某段，$1整段或的其他段<br>同时在<code>{}</code>的结构体中还可以使用<code>if</code>里的条件条件，使用<code>（）</code>包裹起来</p>\n<h2 id=\"常用参数\"><a href=\"#常用参数\" class=\"headerlink\" title=\"常用参数\"></a>常用参数</h2><ol>\n<li>-F 置顶分隔符，它可以是一个字符串或者正则 单个可以直接使用<code>-F:</code> 或者<code>-F &#39;:&#39;</code> 多个分隔符用<code>[]</code>包含 如：<code>[#:/]</code></li>\n</ol>\n<h2 id=\"需要说明的点\"><a href=\"#需要说明的点\" class=\"headerlink\" title=\"需要说明的点\"></a>需要说明的点</h2><p>在awk中有很多内置的变量都有这不同含义，也会方便简化我们的一个操作</p>\n<ol>\n<li>NF 字段数量变量 $NF则表示最后一位 当然$(NF-1)表示倒数第二个 如同$0表示当前行 $1表示每行的第一个字段</li>\n<li>NR 每行的行号</li>\n<li>OFS 输出域分隔符，主要使用在BEGIN中定义 H</li>\n<li>print 打印命令</li>\n</ol>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#以分隔符 ：打印第一列</span><br><span class=\"line\">awk -F: &apos;&#123;print $1&#125;&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#以：和\\分隔打印第一第二列并且以*分隔符分隔</span><br><span class=\"line\">awk -F &quot;[:/]&quot; &apos;&#123;print $1,$2&#125;&apos; OFS=&quot;*&quot; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#查看有多少个字段和输出最后一位</span><br><span class=\"line\">awk -F &quot;:&quot; &apos;&#123;print NF,$NF&#125;&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#输入字段大于6的最后一位</span><br><span class=\"line\">awk -F &quot;:&quot; &apos;NF&gt;6&#123;print NF,$NF&#125;&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#查找含有root的行</span><br><span class=\"line\">awk &apos;/root/&#123;print $0&#125;&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#查找不含root的行</span><br><span class=\"line\">awk &apos;!/root/&#123;print $0&#125;&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#匹配含有多字段的行</span><br><span class=\"line\">awk &apos;/root|mysql/&#123;print $0&#125;&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#匹配两个查找字段之间的行</span><br><span class=\"line\">awk &apos;/root/,/db/&#123;print $0&#125;&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">//第一个字段匹配wang才显示</span><br><span class=\"line\">awk -F: &apos;$1~/wang/&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#匹配是也可以使用正则表达式</span><br><span class=\"line\">awk &apos;/^w/&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#第一段中不含有root的行</span><br><span class=\"line\">awk &apos;&#123;if($1!~/root/)print $0&#125;&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#只显示一行</span><br><span class=\"line\">seq 1 5 | awk &apos;NR==1 &#123;print&#125;&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">#if ... else ...查找一个段包含fpsd打印出来没有的打印 not found</span><br><span class=\"line\">awk -F: &apos;&#123;if ($1~/fpsd/) &#123;print $1&#125; else &#123;print &quot;not found&quot;&#125; &#125;&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#查找第三行是否大于100并且记录总数</span><br><span class=\"line\">awk -F: &apos;BEGIN &#123;A=0;B=0&#125;&#123;if($3&gt;100)&#123;A++;print &quot;biger&quot;&#125; else &#123;B++;print &quot;small&quot;&#125;&#125; END&#123;print A,&quot;\\t&quot;,B&#125;&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#当前目录中文件的大小</span><br><span class=\"line\">ls -l|awk &apos;BEGIN&#123;total=0&#125;!/^d/&#123;total+=$5&#125;END&#123;print total/1024/1024,&quot;MB&quot;&#125;&apos;</span><br></pre></td></tr></table></figure>"},{"title":"Linux三剑客之grep","date":"2017-12-21T06:55:01.000Z","_content":"Linux系统中grep命令是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹 配的行打印出来。grep全称是Global Regular Expression Print，表示全局正则表达式版本，它的使用权限是所有用户\n<!--more-->\n## 命令格式\n\n>grep [option] pattern file\n\n## 主要参数\n1. -v 反向匹配，即显示不配的行\n2. -B <行数> 匹配处理的行以外 再显示之前的n行\n3. -A <行数> 同上 之后的N行\n4. -C <行数> 同上 显示匹配行前后N行\n5. -n 显示行号\n6. -c 只显示匹配的行数即匹配了多少行\n7. -o 只显示匹配的部分\n8. -l 查询多文件时只输出包含匹配字符的文件名\n9. -i 忽略大小写\n10. -r 递归查询 目录及子目录的文件\n\n## 实例\n\n```\n#查找不含root的行\ngrep -v \"root\" /etc/passwd\n\n#在文件中查找匹配行并显示行号\ngrep -n \"root\" /etc/passwd\n\n#在多文件中查找显示匹配的文件\ngrep -l \"root\" /etc/passwd /etc/group\n\n#递归查询所有含root的行\ngrep -r \"root\" /etc/\n\n#查找包含root行的前5行 -C -A同理\ngrep -B 5 \"root\" /etc/passwd\n\n\n```\n\n","source":"_posts/grep.md","raw":"---\ntitle: Linux三剑客之grep\ndate: 2017-12-21 14:55:01\ntags: [linux,grep]\ncategories: Linux\n---\nLinux系统中grep命令是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹 配的行打印出来。grep全称是Global Regular Expression Print，表示全局正则表达式版本，它的使用权限是所有用户\n<!--more-->\n## 命令格式\n\n>grep [option] pattern file\n\n## 主要参数\n1. -v 反向匹配，即显示不配的行\n2. -B <行数> 匹配处理的行以外 再显示之前的n行\n3. -A <行数> 同上 之后的N行\n4. -C <行数> 同上 显示匹配行前后N行\n5. -n 显示行号\n6. -c 只显示匹配的行数即匹配了多少行\n7. -o 只显示匹配的部分\n8. -l 查询多文件时只输出包含匹配字符的文件名\n9. -i 忽略大小写\n10. -r 递归查询 目录及子目录的文件\n\n## 实例\n\n```\n#查找不含root的行\ngrep -v \"root\" /etc/passwd\n\n#在文件中查找匹配行并显示行号\ngrep -n \"root\" /etc/passwd\n\n#在多文件中查找显示匹配的文件\ngrep -l \"root\" /etc/passwd /etc/group\n\n#递归查询所有含root的行\ngrep -r \"root\" /etc/\n\n#查找包含root行的前5行 -C -A同理\ngrep -B 5 \"root\" /etc/passwd\n\n\n```\n\n","slug":"grep","published":1,"updated":"2018-01-02T02:11:46.832Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjf0wg9o2000cv1tz3kph3p8z","content":"<p>Linux系统中grep命令是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹 配的行打印出来。grep全称是Global Regular Expression Print，表示全局正则表达式版本，它的使用权限是所有用户<br><a id=\"more\"></a></p>\n<h2 id=\"命令格式\"><a href=\"#命令格式\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h2><blockquote>\n<p>grep [option] pattern file</p>\n</blockquote>\n<h2 id=\"主要参数\"><a href=\"#主要参数\" class=\"headerlink\" title=\"主要参数\"></a>主要参数</h2><ol>\n<li>-v 反向匹配，即显示不配的行</li>\n<li>-B &lt;行数&gt; 匹配处理的行以外 再显示之前的n行</li>\n<li>-A &lt;行数&gt; 同上 之后的N行</li>\n<li>-C &lt;行数&gt; 同上 显示匹配行前后N行</li>\n<li>-n 显示行号</li>\n<li>-c 只显示匹配的行数即匹配了多少行</li>\n<li>-o 只显示匹配的部分</li>\n<li>-l 查询多文件时只输出包含匹配字符的文件名</li>\n<li>-i 忽略大小写</li>\n<li>-r 递归查询 目录及子目录的文件</li>\n</ol>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#查找不含root的行</span><br><span class=\"line\">grep -v &quot;root&quot; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#在文件中查找匹配行并显示行号</span><br><span class=\"line\">grep -n &quot;root&quot; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#在多文件中查找显示匹配的文件</span><br><span class=\"line\">grep -l &quot;root&quot; /etc/passwd /etc/group</span><br><span class=\"line\"></span><br><span class=\"line\">#递归查询所有含root的行</span><br><span class=\"line\">grep -r &quot;root&quot; /etc/</span><br><span class=\"line\"></span><br><span class=\"line\">#查找包含root行的前5行 -C -A同理</span><br><span class=\"line\">grep -B 5 &quot;root&quot; /etc/passwd</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>Linux系统中grep命令是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹 配的行打印出来。grep全称是Global Regular Expression Print，表示全局正则表达式版本，它的使用权限是所有用户<br>","more":"</p>\n<h2 id=\"命令格式\"><a href=\"#命令格式\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h2><blockquote>\n<p>grep [option] pattern file</p>\n</blockquote>\n<h2 id=\"主要参数\"><a href=\"#主要参数\" class=\"headerlink\" title=\"主要参数\"></a>主要参数</h2><ol>\n<li>-v 反向匹配，即显示不配的行</li>\n<li>-B &lt;行数&gt; 匹配处理的行以外 再显示之前的n行</li>\n<li>-A &lt;行数&gt; 同上 之后的N行</li>\n<li>-C &lt;行数&gt; 同上 显示匹配行前后N行</li>\n<li>-n 显示行号</li>\n<li>-c 只显示匹配的行数即匹配了多少行</li>\n<li>-o 只显示匹配的部分</li>\n<li>-l 查询多文件时只输出包含匹配字符的文件名</li>\n<li>-i 忽略大小写</li>\n<li>-r 递归查询 目录及子目录的文件</li>\n</ol>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#查找不含root的行</span><br><span class=\"line\">grep -v &quot;root&quot; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#在文件中查找匹配行并显示行号</span><br><span class=\"line\">grep -n &quot;root&quot; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#在多文件中查找显示匹配的文件</span><br><span class=\"line\">grep -l &quot;root&quot; /etc/passwd /etc/group</span><br><span class=\"line\"></span><br><span class=\"line\">#递归查询所有含root的行</span><br><span class=\"line\">grep -r &quot;root&quot; /etc/</span><br><span class=\"line\"></span><br><span class=\"line\">#查找包含root行的前5行 -C -A同理</span><br><span class=\"line\">grep -B 5 &quot;root&quot; /etc/passwd</span><br></pre></td></tr></table></figure>"},{"title":"记一次fatal: Pathspec 'blog/themes/next/1' is in submodule 'blog/themes/next'","date":"2017-12-30T13:47:46.000Z","_content":"最近捣鼓hexo博客，发现next主题不在版本库中无法被add进去所以就想强制添加发现报错了如下：\n\n```\nfatal: Pathspec 'blog/themes/next/1' is in submodule 'blog/themes/next'\n```\n<!--more-->\n然后各种资料发现如果当你在你的当前的git版本中clone了另一个扩展或者说事版本库的时候我们为了能将这个扩展添加在本git版本中去会删了他原有.git目录，但是如果你删了，并且add后git会创建一个子模块就会抱这样的一个错误，这时候就需要处理这样一个情况需要一步即可：\n```\ngit rm --cached file\n```\n然后add 即可\n","source":"_posts/gitsubmoduleerror.md","raw":"---\ntitle: \"记一次fatal: Pathspec 'blog/themes/next/1' is in submodule 'blog/themes/next'\"\ndate: 2017-12-30 21:47:46\ncategories: stackoverflow\ntags: [git,stackoverflow]\n---\n最近捣鼓hexo博客，发现next主题不在版本库中无法被add进去所以就想强制添加发现报错了如下：\n\n```\nfatal: Pathspec 'blog/themes/next/1' is in submodule 'blog/themes/next'\n```\n<!--more-->\n然后各种资料发现如果当你在你的当前的git版本中clone了另一个扩展或者说事版本库的时候我们为了能将这个扩展添加在本git版本中去会删了他原有.git目录，但是如果你删了，并且add后git会创建一个子模块就会抱这样的一个错误，这时候就需要处理这样一个情况需要一步即可：\n```\ngit rm --cached file\n```\n然后add 即可\n","slug":"gitsubmoduleerror","published":1,"updated":"2018-01-02T02:11:46.832Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjf0wg9o3000ev1tzxbbjndwd","content":"<p>最近捣鼓hexo博客，发现next主题不在版本库中无法被add进去所以就想强制添加发现报错了如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fatal: Pathspec &apos;blog/themes/next/1&apos; is in submodule &apos;blog/themes/next&apos;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>然后各种资料发现如果当你在你的当前的git版本中clone了另一个扩展或者说事版本库的时候我们为了能将这个扩展添加在本git版本中去会删了他原有.git目录，但是如果你删了，并且add后git会创建一个子模块就会抱这样的一个错误，这时候就需要处理这样一个情况需要一步即可：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm --cached file</span><br></pre></td></tr></table></figure></p>\n<p>然后add 即可</p>\n","site":{"data":{}},"excerpt":"<p>最近捣鼓hexo博客，发现next主题不在版本库中无法被add进去所以就想强制添加发现报错了如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fatal: Pathspec &apos;blog/themes/next/1&apos; is in submodule &apos;blog/themes/next&apos;</span><br></pre></td></tr></table></figure>","more":"<p>然后各种资料发现如果当你在你的当前的git版本中clone了另一个扩展或者说事版本库的时候我们为了能将这个扩展添加在本git版本中去会删了他原有.git目录，但是如果你删了，并且add后git会创建一个子模块就会抱这样的一个错误，这时候就需要处理这样一个情况需要一步即可：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm --cached file</span><br></pre></td></tr></table></figure></p>\n<p>然后add 即可</p>"},{"title":"Linux三剑客之sed","date":"2017-12-21T11:55:53.000Z","_content":"Sed本质上是一个编辑器，但是它是非交互式的，这点与VIM不同；同时它又是面向字符流的，输入的字符流经过Sed的处理后输出。这两个特性使得Sed成为命令行下面非常有用的一个处理工具。\n<!--more-->\n\n## 命令格式\n\n>sed [options] script filename\n>sed -f scriptfile filename\n\nsed会以此读取文件中的行并且加入到缓存当中去并用script来处理该内容，并且不会影响到原有的文件（使用-i参数是会影响到原有文件）一般多指令的情况下会使用`;`分隔(也可以使用参数-e)\n\n## 模式空间\nsed的处理流程如下图显示:\n![](https://ws1.sinaimg.cn/large/65ca5a5cly1fmoo6jcun5j20hz0f0gm7.jpg)\n\n1. 读入新的一行内容到缓存空间；\n2. 从指定的操作指令中取出第一条指令，判断是否匹配pattern；\n3. 如果不匹配，则忽略后续的编辑命令，回到第2步继续取出下一条指令；\n4. 如果匹配，则针对缓存的行执行后续的编辑命令；完成后，回到第2步继续取出下一条指令；\n5. 当所有指令都应用之后，输出缓存行的内容；回到第1步继续读入下一行内容；\n6. 当所有行都处理完之后，结束\n\n由次可以，sed不是将一个命令用于每一行，而是一个行的方式来单个处理，同时每一行被读取到缓存中，并且每次只会缓存一行，我们称之为`模式空间`（pattern space）每个应用到的命令都会相互影响，因为每个命令处理之后都会应用到模式空间,所以说命令之间的顺序就很重要了,这种由于只会缓存一行到模式空间中去所以，用sed处理大文件就不会有什么问题了。如下图是一个简单的模式空间转换的流程图\n\n![](https://ws1.sinaimg.cn/large/65ca5a5cly1fmpmyorywej20hp0almxr.jpg)\n\n1. 先读取一行 `The Unix System`到模式空间中\n2. 应用第一条命令将 `Unix` 替换成 `UNIX`， 这个时候这一行内容变成 `The UNIX System` 并存到模式空间中区\n3. 然后应用第二条命令将 `UNIX System` 替换成 `UNIX Operating System` 这时候这一行的内容变成 `The UNIX Operating System` 并存储到模式空间\n4. 此时执行完所有的命令，输出模式空间中的行\n\n## 地址匹配\n地址匹配在sed操作中和非常重要，因为sed是某人处理每一行，对每一行处理所有的指令，这个时候就需要用地址匹配来限制sed处理的行,例如：\n\n```\nsed '/root/s/sa/saaaa/g' /etc/passwd\n```\n\n这时候就只会匹配包含向/root/是一个正则的行才会将sa替换为saaaa 类似 cook sa book中的sa就不会被替换。\nsed中的地址匹配，可以是0个，1个或者1个地址对（2个地址）。当然地址可以是`正则`（如\\root\\），`行号`，或者`行号符` (如最后一行$)。\n例如\n\n```\n#通过地址对\nsed '/lda/,/krbtgt/s/var/super star/g' /etc/passwd\n\n#通过行号\nsed '2s/sa/saaaaaaa/g' temp\nsed '1,2s/sa/saaaaaaa/g' temp\n\n#通过特定符号\nsed '$s/sa/saaaaaaa/g' temp\n```\n\n* 没有地址匹配将应用到所有的行上\n* 如果指定了地址匹配，命令将只应用到匹配的行上\n* 如果指定了地址对（addr1,addr2）命令将应用到包括起始行之间的所有行,如果只匹配到了addr1，则开启命令开关了，直到匹配到addr2结束,如果没有匹配到addr2就会一直到最后行\n* 如果地址后面有一个感叹号（！），则将编辑命令应用到不匹配该地址的所有行；\n\n```\nsed '/root/!s/sa/saaaaaaa/g' temp\n```\n\n总结一下：\n1. 对于addr1,addr2地址对的匹配，如果addr1匹配上回开启匹配开关，直到addr2匹配完成。如果没有匹配到addr2就会默认直到最后一行\n2. 如果对于addr1是行号的话，如果新读入的行大于等于addr1行号，则匹配。如果小于addr1行号的话则不匹配，同理addr2是行号的话，新入得行小于addr2则匹配，大于addr2的话则不匹配。\n\n## 基础命令\n\n名称|命令|语法|说明\n---|---|---|---\n替换|s|[address]s/pattern/replacement/flags|替换匹配的内容这里的 `/`分隔符是可以替换成其他的\n删除|d|[address]d|删除匹配的行\n插入|i|[line-address]i\\text|在匹配行的前方插入文本\n追加|a|[line-address]a\\text|在匹配行的后方插入文本\n行替换|c|[address]c\\text|将匹配的行替换成文本text\n打印行|p|[address]p|打印在模式空间中的行\n打印行号|=|[address]=|打印当前行行号\n打印行|l|[address]l|打印在模式空间中的行，同时显示控制字符\n转换字符|y|[address]y/SET1/SET2/|将SET1中出现的字符替换成SET2中对应位置的字符\n读取下一行|n|[address]n|将下一行的内容读取到模式空间\n读文件|r|[line-address]r file|将指定的文件读取到匹配行之后\n写文件|w|[address]w file|将匹配地址的所有行输出到指定的文件中\n退出|q|[line-address]q|读取到匹配的行之后即退出\n\n### 替换命令：s\n\n>[address]s/pattern/replacement/flags\n\naddress是指的地址，s是替换命令，pattern表示匹配表达式，replacement表示需要替换成的内容，flags表示替换的标志位，标志位一般有没有一种或多种如：\n1. n: 一个数字（取值范围1-512），表明仅替换前n个被pattern匹配的内容\n2. g: 表示全局替换，替换所有被pattern匹配的内容；\n3. p: 仅当行被pattern匹配时，打印模式空间的内容\n4. w file：仅当行被pattern匹配时，将模式空间的内容输出到文件file中；\n\n当flag没有的时候默认匹配第一个后面的不会替换\n```\necho \"1,1,1,1,\"|sed 's/,/*/'\n1*1,1,1,\n```\n\n当flag为n数字的时候表示第几次匹配的时候替换其他匹配不替换\n```\necho \"1,1,1,1,\"|sed 's/,/*/2'\n1,1*1,1,\n```\n\n当flag为g标志位时表示全局替换\n```\necho \"1,1,1,1,\"|sed 's/,/*/g'\n1*1*1*1*\n```\n\n### 删除命令：[address]d\n\n删除命令用于删除一条或多条视频例如`1,3d`就会删除1-3行的内容。删除命令的原理是删除模式空间中的内容，所以一旦前面的命令是删除命令的时候，后面的命令将不会执行了，因为模式空间中的内容已经被清空了。这时候就会读取新的行到模式空间中来。\n\n删除1-5行\n```\n sed '1,5d' temp\n```\n\n删除匹配root的行\n```\nsed '/root/d' temp\n```\n\n删除地址对之间的行\n```\nsed '/root/,/mysql/d' temp\n```\n\n### 插入/追加/替换行命令：i/a/c\n>[line-address]i\\text\n>[line-address]a\\text\n>[address]c\\text\n\n这三个当中插入和追加只能使用当个地址，替换可以使用多个地址\n```\nsed '2a\\\n--------------------------------------\n' temp\nthis is root page sa\ni am not sa\n--------------------------------------\nhaha\nsdfasdf\nsadfsadfdsfqwerqwer\nwwqrewrq\n```\n\n### 打印命令：p/l/=\n>[address]p\n>[address]l\n>[address]=\n\n下面的-n是指只显示匹配的行\n```\nsed -n '2p' temp\ni am not sa\n\nsed '=' temp\n1\nthis is root page sa\n2\ni am not sa\n3\nhaha\n4\nsdfasdf\n5\nsadfsadfdsfqwerqwer\n6\nwwqrewrq\n```\n\n### 特殊字符\n1. & 字符这个字符是存储匹配模式里的内容\n\n在匹配的内容后面加ok\n```\nsed 's/root/& ok/g' /etc/passwd\n```\n\n2. ^ $ 开头结尾\n\n```\n#将3到最后一行删除然后将std替换成wangchao\nsed -e '3,$d' passwd  -e 's/std/wangchao/g'\n\n查找到wangchao在该行的开头加一个hello ^这个表示开头 同理$表示结尾\nsed '/wangchao/s/^/ hello/' /etc/passwd \n```\n\n\n","source":"_posts/sed.md","raw":"---\ntitle: Linux三剑客之sed\ndate: 2017-12-21 19:55:53\ntags: [linux,sed]\ncategories: Linux\n---\nSed本质上是一个编辑器，但是它是非交互式的，这点与VIM不同；同时它又是面向字符流的，输入的字符流经过Sed的处理后输出。这两个特性使得Sed成为命令行下面非常有用的一个处理工具。\n<!--more-->\n\n## 命令格式\n\n>sed [options] script filename\n>sed -f scriptfile filename\n\nsed会以此读取文件中的行并且加入到缓存当中去并用script来处理该内容，并且不会影响到原有的文件（使用-i参数是会影响到原有文件）一般多指令的情况下会使用`;`分隔(也可以使用参数-e)\n\n## 模式空间\nsed的处理流程如下图显示:\n![](https://ws1.sinaimg.cn/large/65ca5a5cly1fmoo6jcun5j20hz0f0gm7.jpg)\n\n1. 读入新的一行内容到缓存空间；\n2. 从指定的操作指令中取出第一条指令，判断是否匹配pattern；\n3. 如果不匹配，则忽略后续的编辑命令，回到第2步继续取出下一条指令；\n4. 如果匹配，则针对缓存的行执行后续的编辑命令；完成后，回到第2步继续取出下一条指令；\n5. 当所有指令都应用之后，输出缓存行的内容；回到第1步继续读入下一行内容；\n6. 当所有行都处理完之后，结束\n\n由次可以，sed不是将一个命令用于每一行，而是一个行的方式来单个处理，同时每一行被读取到缓存中，并且每次只会缓存一行，我们称之为`模式空间`（pattern space）每个应用到的命令都会相互影响，因为每个命令处理之后都会应用到模式空间,所以说命令之间的顺序就很重要了,这种由于只会缓存一行到模式空间中去所以，用sed处理大文件就不会有什么问题了。如下图是一个简单的模式空间转换的流程图\n\n![](https://ws1.sinaimg.cn/large/65ca5a5cly1fmpmyorywej20hp0almxr.jpg)\n\n1. 先读取一行 `The Unix System`到模式空间中\n2. 应用第一条命令将 `Unix` 替换成 `UNIX`， 这个时候这一行内容变成 `The UNIX System` 并存到模式空间中区\n3. 然后应用第二条命令将 `UNIX System` 替换成 `UNIX Operating System` 这时候这一行的内容变成 `The UNIX Operating System` 并存储到模式空间\n4. 此时执行完所有的命令，输出模式空间中的行\n\n## 地址匹配\n地址匹配在sed操作中和非常重要，因为sed是某人处理每一行，对每一行处理所有的指令，这个时候就需要用地址匹配来限制sed处理的行,例如：\n\n```\nsed '/root/s/sa/saaaa/g' /etc/passwd\n```\n\n这时候就只会匹配包含向/root/是一个正则的行才会将sa替换为saaaa 类似 cook sa book中的sa就不会被替换。\nsed中的地址匹配，可以是0个，1个或者1个地址对（2个地址）。当然地址可以是`正则`（如\\root\\），`行号`，或者`行号符` (如最后一行$)。\n例如\n\n```\n#通过地址对\nsed '/lda/,/krbtgt/s/var/super star/g' /etc/passwd\n\n#通过行号\nsed '2s/sa/saaaaaaa/g' temp\nsed '1,2s/sa/saaaaaaa/g' temp\n\n#通过特定符号\nsed '$s/sa/saaaaaaa/g' temp\n```\n\n* 没有地址匹配将应用到所有的行上\n* 如果指定了地址匹配，命令将只应用到匹配的行上\n* 如果指定了地址对（addr1,addr2）命令将应用到包括起始行之间的所有行,如果只匹配到了addr1，则开启命令开关了，直到匹配到addr2结束,如果没有匹配到addr2就会一直到最后行\n* 如果地址后面有一个感叹号（！），则将编辑命令应用到不匹配该地址的所有行；\n\n```\nsed '/root/!s/sa/saaaaaaa/g' temp\n```\n\n总结一下：\n1. 对于addr1,addr2地址对的匹配，如果addr1匹配上回开启匹配开关，直到addr2匹配完成。如果没有匹配到addr2就会默认直到最后一行\n2. 如果对于addr1是行号的话，如果新读入的行大于等于addr1行号，则匹配。如果小于addr1行号的话则不匹配，同理addr2是行号的话，新入得行小于addr2则匹配，大于addr2的话则不匹配。\n\n## 基础命令\n\n名称|命令|语法|说明\n---|---|---|---\n替换|s|[address]s/pattern/replacement/flags|替换匹配的内容这里的 `/`分隔符是可以替换成其他的\n删除|d|[address]d|删除匹配的行\n插入|i|[line-address]i\\text|在匹配行的前方插入文本\n追加|a|[line-address]a\\text|在匹配行的后方插入文本\n行替换|c|[address]c\\text|将匹配的行替换成文本text\n打印行|p|[address]p|打印在模式空间中的行\n打印行号|=|[address]=|打印当前行行号\n打印行|l|[address]l|打印在模式空间中的行，同时显示控制字符\n转换字符|y|[address]y/SET1/SET2/|将SET1中出现的字符替换成SET2中对应位置的字符\n读取下一行|n|[address]n|将下一行的内容读取到模式空间\n读文件|r|[line-address]r file|将指定的文件读取到匹配行之后\n写文件|w|[address]w file|将匹配地址的所有行输出到指定的文件中\n退出|q|[line-address]q|读取到匹配的行之后即退出\n\n### 替换命令：s\n\n>[address]s/pattern/replacement/flags\n\naddress是指的地址，s是替换命令，pattern表示匹配表达式，replacement表示需要替换成的内容，flags表示替换的标志位，标志位一般有没有一种或多种如：\n1. n: 一个数字（取值范围1-512），表明仅替换前n个被pattern匹配的内容\n2. g: 表示全局替换，替换所有被pattern匹配的内容；\n3. p: 仅当行被pattern匹配时，打印模式空间的内容\n4. w file：仅当行被pattern匹配时，将模式空间的内容输出到文件file中；\n\n当flag没有的时候默认匹配第一个后面的不会替换\n```\necho \"1,1,1,1,\"|sed 's/,/*/'\n1*1,1,1,\n```\n\n当flag为n数字的时候表示第几次匹配的时候替换其他匹配不替换\n```\necho \"1,1,1,1,\"|sed 's/,/*/2'\n1,1*1,1,\n```\n\n当flag为g标志位时表示全局替换\n```\necho \"1,1,1,1,\"|sed 's/,/*/g'\n1*1*1*1*\n```\n\n### 删除命令：[address]d\n\n删除命令用于删除一条或多条视频例如`1,3d`就会删除1-3行的内容。删除命令的原理是删除模式空间中的内容，所以一旦前面的命令是删除命令的时候，后面的命令将不会执行了，因为模式空间中的内容已经被清空了。这时候就会读取新的行到模式空间中来。\n\n删除1-5行\n```\n sed '1,5d' temp\n```\n\n删除匹配root的行\n```\nsed '/root/d' temp\n```\n\n删除地址对之间的行\n```\nsed '/root/,/mysql/d' temp\n```\n\n### 插入/追加/替换行命令：i/a/c\n>[line-address]i\\text\n>[line-address]a\\text\n>[address]c\\text\n\n这三个当中插入和追加只能使用当个地址，替换可以使用多个地址\n```\nsed '2a\\\n--------------------------------------\n' temp\nthis is root page sa\ni am not sa\n--------------------------------------\nhaha\nsdfasdf\nsadfsadfdsfqwerqwer\nwwqrewrq\n```\n\n### 打印命令：p/l/=\n>[address]p\n>[address]l\n>[address]=\n\n下面的-n是指只显示匹配的行\n```\nsed -n '2p' temp\ni am not sa\n\nsed '=' temp\n1\nthis is root page sa\n2\ni am not sa\n3\nhaha\n4\nsdfasdf\n5\nsadfsadfdsfqwerqwer\n6\nwwqrewrq\n```\n\n### 特殊字符\n1. & 字符这个字符是存储匹配模式里的内容\n\n在匹配的内容后面加ok\n```\nsed 's/root/& ok/g' /etc/passwd\n```\n\n2. ^ $ 开头结尾\n\n```\n#将3到最后一行删除然后将std替换成wangchao\nsed -e '3,$d' passwd  -e 's/std/wangchao/g'\n\n查找到wangchao在该行的开头加一个hello ^这个表示开头 同理$表示结尾\nsed '/wangchao/s/^/ hello/' /etc/passwd \n```\n\n\n","slug":"sed","published":1,"updated":"2018-01-02T02:11:46.832Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjf0wg9o5000hv1tzgch3fjgv","content":"<p>Sed本质上是一个编辑器，但是它是非交互式的，这点与VIM不同；同时它又是面向字符流的，输入的字符流经过Sed的处理后输出。这两个特性使得Sed成为命令行下面非常有用的一个处理工具。<br><a id=\"more\"></a></p>\n<h2 id=\"命令格式\"><a href=\"#命令格式\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h2><blockquote>\n<p>sed [options] script filename<br>sed -f scriptfile filename</p>\n</blockquote>\n<p>sed会以此读取文件中的行并且加入到缓存当中去并用script来处理该内容，并且不会影响到原有的文件（使用-i参数是会影响到原有文件）一般多指令的情况下会使用<code>;</code>分隔(也可以使用参数-e)</p>\n<h2 id=\"模式空间\"><a href=\"#模式空间\" class=\"headerlink\" title=\"模式空间\"></a>模式空间</h2><p>sed的处理流程如下图显示:<br><img src=\"https://ws1.sinaimg.cn/large/65ca5a5cly1fmoo6jcun5j20hz0f0gm7.jpg\" alt=\"\"></p>\n<ol>\n<li>读入新的一行内容到缓存空间；</li>\n<li>从指定的操作指令中取出第一条指令，判断是否匹配pattern；</li>\n<li>如果不匹配，则忽略后续的编辑命令，回到第2步继续取出下一条指令；</li>\n<li>如果匹配，则针对缓存的行执行后续的编辑命令；完成后，回到第2步继续取出下一条指令；</li>\n<li>当所有指令都应用之后，输出缓存行的内容；回到第1步继续读入下一行内容；</li>\n<li>当所有行都处理完之后，结束</li>\n</ol>\n<p>由次可以，sed不是将一个命令用于每一行，而是一个行的方式来单个处理，同时每一行被读取到缓存中，并且每次只会缓存一行，我们称之为<code>模式空间</code>（pattern space）每个应用到的命令都会相互影响，因为每个命令处理之后都会应用到模式空间,所以说命令之间的顺序就很重要了,这种由于只会缓存一行到模式空间中去所以，用sed处理大文件就不会有什么问题了。如下图是一个简单的模式空间转换的流程图</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/65ca5a5cly1fmpmyorywej20hp0almxr.jpg\" alt=\"\"></p>\n<ol>\n<li>先读取一行 <code>The Unix System</code>到模式空间中</li>\n<li>应用第一条命令将 <code>Unix</code> 替换成 <code>UNIX</code>， 这个时候这一行内容变成 <code>The UNIX System</code> 并存到模式空间中区</li>\n<li>然后应用第二条命令将 <code>UNIX System</code> 替换成 <code>UNIX Operating System</code> 这时候这一行的内容变成 <code>The UNIX Operating System</code> 并存储到模式空间</li>\n<li>此时执行完所有的命令，输出模式空间中的行</li>\n</ol>\n<h2 id=\"地址匹配\"><a href=\"#地址匹配\" class=\"headerlink\" title=\"地址匹配\"></a>地址匹配</h2><p>地址匹配在sed操作中和非常重要，因为sed是某人处理每一行，对每一行处理所有的指令，这个时候就需要用地址匹配来限制sed处理的行,例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;/root/s/sa/saaaa/g&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\n<p>这时候就只会匹配包含向/root/是一个正则的行才会将sa替换为saaaa 类似 cook sa book中的sa就不会被替换。<br>sed中的地址匹配，可以是0个，1个或者1个地址对（2个地址）。当然地址可以是<code>正则</code>（如\\root\\），<code>行号</code>，或者<code>行号符</code> (如最后一行$)。<br>例如</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#通过地址对</span><br><span class=\"line\">sed &apos;/lda/,/krbtgt/s/var/super star/g&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#通过行号</span><br><span class=\"line\">sed &apos;2s/sa/saaaaaaa/g&apos; temp</span><br><span class=\"line\">sed &apos;1,2s/sa/saaaaaaa/g&apos; temp</span><br><span class=\"line\"></span><br><span class=\"line\">#通过特定符号</span><br><span class=\"line\">sed &apos;$s/sa/saaaaaaa/g&apos; temp</span><br></pre></td></tr></table></figure>\n<ul>\n<li>没有地址匹配将应用到所有的行上</li>\n<li>如果指定了地址匹配，命令将只应用到匹配的行上</li>\n<li>如果指定了地址对（addr1,addr2）命令将应用到包括起始行之间的所有行,如果只匹配到了addr1，则开启命令开关了，直到匹配到addr2结束,如果没有匹配到addr2就会一直到最后行</li>\n<li>如果地址后面有一个感叹号（！），则将编辑命令应用到不匹配该地址的所有行；</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;/root/!s/sa/saaaaaaa/g&apos; temp</span><br></pre></td></tr></table></figure>\n<p>总结一下：</p>\n<ol>\n<li>对于addr1,addr2地址对的匹配，如果addr1匹配上回开启匹配开关，直到addr2匹配完成。如果没有匹配到addr2就会默认直到最后一行</li>\n<li>如果对于addr1是行号的话，如果新读入的行大于等于addr1行号，则匹配。如果小于addr1行号的话则不匹配，同理addr2是行号的话，新入得行小于addr2则匹配，大于addr2的话则不匹配。</li>\n</ol>\n<h2 id=\"基础命令\"><a href=\"#基础命令\" class=\"headerlink\" title=\"基础命令\"></a>基础命令</h2><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>命令</th>\n<th>语法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>替换</td>\n<td>s</td>\n<td>[address]s/pattern/replacement/flags</td>\n<td>替换匹配的内容这里的 <code>/</code>分隔符是可以替换成其他的</td>\n</tr>\n<tr>\n<td>删除</td>\n<td>d</td>\n<td>[address]d</td>\n<td>删除匹配的行</td>\n</tr>\n<tr>\n<td>插入</td>\n<td>i</td>\n<td>[line-address]i\\text</td>\n<td>在匹配行的前方插入文本</td>\n</tr>\n<tr>\n<td>追加</td>\n<td>a</td>\n<td>[line-address]a\\text</td>\n<td>在匹配行的后方插入文本</td>\n</tr>\n<tr>\n<td>行替换</td>\n<td>c</td>\n<td>[address]c\\text</td>\n<td>将匹配的行替换成文本text</td>\n</tr>\n<tr>\n<td>打印行</td>\n<td>p</td>\n<td>[address]p</td>\n<td>打印在模式空间中的行</td>\n</tr>\n<tr>\n<td>打印行号</td>\n<td>=</td>\n<td>[address]=</td>\n<td>打印当前行行号</td>\n</tr>\n<tr>\n<td>打印行</td>\n<td>l</td>\n<td>[address]l</td>\n<td>打印在模式空间中的行，同时显示控制字符</td>\n</tr>\n<tr>\n<td>转换字符</td>\n<td>y</td>\n<td>[address]y/SET1/SET2/</td>\n<td>将SET1中出现的字符替换成SET2中对应位置的字符</td>\n</tr>\n<tr>\n<td>读取下一行</td>\n<td>n</td>\n<td>[address]n</td>\n<td>将下一行的内容读取到模式空间</td>\n</tr>\n<tr>\n<td>读文件</td>\n<td>r</td>\n<td>[line-address]r file</td>\n<td>将指定的文件读取到匹配行之后</td>\n</tr>\n<tr>\n<td>写文件</td>\n<td>w</td>\n<td>[address]w file</td>\n<td>将匹配地址的所有行输出到指定的文件中</td>\n</tr>\n<tr>\n<td>退出</td>\n<td>q</td>\n<td>[line-address]q</td>\n<td>读取到匹配的行之后即退出</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"替换命令：s\"><a href=\"#替换命令：s\" class=\"headerlink\" title=\"替换命令：s\"></a>替换命令：s</h3><blockquote>\n<p>[address]s/pattern/replacement/flags</p>\n</blockquote>\n<p>address是指的地址，s是替换命令，pattern表示匹配表达式，replacement表示需要替换成的内容，flags表示替换的标志位，标志位一般有没有一种或多种如：</p>\n<ol>\n<li>n: 一个数字（取值范围1-512），表明仅替换前n个被pattern匹配的内容</li>\n<li>g: 表示全局替换，替换所有被pattern匹配的内容；</li>\n<li>p: 仅当行被pattern匹配时，打印模式空间的内容</li>\n<li>w file：仅当行被pattern匹配时，将模式空间的内容输出到文件file中；</li>\n</ol>\n<p>当flag没有的时候默认匹配第一个后面的不会替换<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;1,1,1,1,&quot;|sed &apos;s/,/*/&apos;</span><br><span class=\"line\">1*1,1,1,</span><br></pre></td></tr></table></figure></p>\n<p>当flag为n数字的时候表示第几次匹配的时候替换其他匹配不替换<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;1,1,1,1,&quot;|sed &apos;s/,/*/2&apos;</span><br><span class=\"line\">1,1*1,1,</span><br></pre></td></tr></table></figure></p>\n<p>当flag为g标志位时表示全局替换<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;1,1,1,1,&quot;|sed &apos;s/,/*/g&apos;</span><br><span class=\"line\">1*1*1*1*</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"删除命令：-address-d\"><a href=\"#删除命令：-address-d\" class=\"headerlink\" title=\"删除命令：[address]d\"></a>删除命令：[address]d</h3><p>删除命令用于删除一条或多条视频例如<code>1,3d</code>就会删除1-3行的内容。删除命令的原理是删除模式空间中的内容，所以一旦前面的命令是删除命令的时候，后面的命令将不会执行了，因为模式空间中的内容已经被清空了。这时候就会读取新的行到模式空间中来。</p>\n<p>删除1-5行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;1,5d&apos; temp</span><br></pre></td></tr></table></figure></p>\n<p>删除匹配root的行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;/root/d&apos; temp</span><br></pre></td></tr></table></figure></p>\n<p>删除地址对之间的行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;/root/,/mysql/d&apos; temp</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"插入-追加-替换行命令：i-a-c\"><a href=\"#插入-追加-替换行命令：i-a-c\" class=\"headerlink\" title=\"插入/追加/替换行命令：i/a/c\"></a>插入/追加/替换行命令：i/a/c</h3><blockquote>\n<p>[line-address]i\\text<br>[line-address]a\\text<br>[address]c\\text</p>\n</blockquote>\n<p>这三个当中插入和追加只能使用当个地址，替换可以使用多个地址<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;2a\\</span><br><span class=\"line\">--------------------------------------</span><br><span class=\"line\">&apos; temp</span><br><span class=\"line\">this is root page sa</span><br><span class=\"line\">i am not sa</span><br><span class=\"line\">--------------------------------------</span><br><span class=\"line\">haha</span><br><span class=\"line\">sdfasdf</span><br><span class=\"line\">sadfsadfdsfqwerqwer</span><br><span class=\"line\">wwqrewrq</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"打印命令：p-l\"><a href=\"#打印命令：p-l\" class=\"headerlink\" title=\"打印命令：p/l/=\"></a>打印命令：p/l/=</h3><blockquote>\n<p>[address]p<br>[address]l<br>[address]=</p>\n</blockquote>\n<p>下面的-n是指只显示匹配的行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -n &apos;2p&apos; temp</span><br><span class=\"line\">i am not sa</span><br><span class=\"line\"></span><br><span class=\"line\">sed &apos;=&apos; temp</span><br><span class=\"line\">1</span><br><span class=\"line\">this is root page sa</span><br><span class=\"line\">2</span><br><span class=\"line\">i am not sa</span><br><span class=\"line\">3</span><br><span class=\"line\">haha</span><br><span class=\"line\">4</span><br><span class=\"line\">sdfasdf</span><br><span class=\"line\">5</span><br><span class=\"line\">sadfsadfdsfqwerqwer</span><br><span class=\"line\">6</span><br><span class=\"line\">wwqrewrq</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"特殊字符\"><a href=\"#特殊字符\" class=\"headerlink\" title=\"特殊字符\"></a>特殊字符</h3><ol>\n<li>&amp; 字符这个字符是存储匹配模式里的内容</li>\n</ol>\n<p>在匹配的内容后面加ok<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;s/root/&amp; ok/g&apos; /etc/passwd</span><br></pre></td></tr></table></figure></p>\n<ol>\n<li>^ $ 开头结尾</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#将3到最后一行删除然后将std替换成wangchao</span><br><span class=\"line\">sed -e &apos;3,$d&apos; passwd  -e &apos;s/std/wangchao/g&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">查找到wangchao在该行的开头加一个hello ^这个表示开头 同理$表示结尾</span><br><span class=\"line\">sed &apos;/wangchao/s/^/ hello/&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>Sed本质上是一个编辑器，但是它是非交互式的，这点与VIM不同；同时它又是面向字符流的，输入的字符流经过Sed的处理后输出。这两个特性使得Sed成为命令行下面非常有用的一个处理工具。<br>","more":"</p>\n<h2 id=\"命令格式\"><a href=\"#命令格式\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h2><blockquote>\n<p>sed [options] script filename<br>sed -f scriptfile filename</p>\n</blockquote>\n<p>sed会以此读取文件中的行并且加入到缓存当中去并用script来处理该内容，并且不会影响到原有的文件（使用-i参数是会影响到原有文件）一般多指令的情况下会使用<code>;</code>分隔(也可以使用参数-e)</p>\n<h2 id=\"模式空间\"><a href=\"#模式空间\" class=\"headerlink\" title=\"模式空间\"></a>模式空间</h2><p>sed的处理流程如下图显示:<br><img src=\"https://ws1.sinaimg.cn/large/65ca5a5cly1fmoo6jcun5j20hz0f0gm7.jpg\" alt=\"\"></p>\n<ol>\n<li>读入新的一行内容到缓存空间；</li>\n<li>从指定的操作指令中取出第一条指令，判断是否匹配pattern；</li>\n<li>如果不匹配，则忽略后续的编辑命令，回到第2步继续取出下一条指令；</li>\n<li>如果匹配，则针对缓存的行执行后续的编辑命令；完成后，回到第2步继续取出下一条指令；</li>\n<li>当所有指令都应用之后，输出缓存行的内容；回到第1步继续读入下一行内容；</li>\n<li>当所有行都处理完之后，结束</li>\n</ol>\n<p>由次可以，sed不是将一个命令用于每一行，而是一个行的方式来单个处理，同时每一行被读取到缓存中，并且每次只会缓存一行，我们称之为<code>模式空间</code>（pattern space）每个应用到的命令都会相互影响，因为每个命令处理之后都会应用到模式空间,所以说命令之间的顺序就很重要了,这种由于只会缓存一行到模式空间中去所以，用sed处理大文件就不会有什么问题了。如下图是一个简单的模式空间转换的流程图</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/65ca5a5cly1fmpmyorywej20hp0almxr.jpg\" alt=\"\"></p>\n<ol>\n<li>先读取一行 <code>The Unix System</code>到模式空间中</li>\n<li>应用第一条命令将 <code>Unix</code> 替换成 <code>UNIX</code>， 这个时候这一行内容变成 <code>The UNIX System</code> 并存到模式空间中区</li>\n<li>然后应用第二条命令将 <code>UNIX System</code> 替换成 <code>UNIX Operating System</code> 这时候这一行的内容变成 <code>The UNIX Operating System</code> 并存储到模式空间</li>\n<li>此时执行完所有的命令，输出模式空间中的行</li>\n</ol>\n<h2 id=\"地址匹配\"><a href=\"#地址匹配\" class=\"headerlink\" title=\"地址匹配\"></a>地址匹配</h2><p>地址匹配在sed操作中和非常重要，因为sed是某人处理每一行，对每一行处理所有的指令，这个时候就需要用地址匹配来限制sed处理的行,例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;/root/s/sa/saaaa/g&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\n<p>这时候就只会匹配包含向/root/是一个正则的行才会将sa替换为saaaa 类似 cook sa book中的sa就不会被替换。<br>sed中的地址匹配，可以是0个，1个或者1个地址对（2个地址）。当然地址可以是<code>正则</code>（如\\root\\），<code>行号</code>，或者<code>行号符</code> (如最后一行$)。<br>例如</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#通过地址对</span><br><span class=\"line\">sed &apos;/lda/,/krbtgt/s/var/super star/g&apos; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">#通过行号</span><br><span class=\"line\">sed &apos;2s/sa/saaaaaaa/g&apos; temp</span><br><span class=\"line\">sed &apos;1,2s/sa/saaaaaaa/g&apos; temp</span><br><span class=\"line\"></span><br><span class=\"line\">#通过特定符号</span><br><span class=\"line\">sed &apos;$s/sa/saaaaaaa/g&apos; temp</span><br></pre></td></tr></table></figure>\n<ul>\n<li>没有地址匹配将应用到所有的行上</li>\n<li>如果指定了地址匹配，命令将只应用到匹配的行上</li>\n<li>如果指定了地址对（addr1,addr2）命令将应用到包括起始行之间的所有行,如果只匹配到了addr1，则开启命令开关了，直到匹配到addr2结束,如果没有匹配到addr2就会一直到最后行</li>\n<li>如果地址后面有一个感叹号（！），则将编辑命令应用到不匹配该地址的所有行；</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;/root/!s/sa/saaaaaaa/g&apos; temp</span><br></pre></td></tr></table></figure>\n<p>总结一下：</p>\n<ol>\n<li>对于addr1,addr2地址对的匹配，如果addr1匹配上回开启匹配开关，直到addr2匹配完成。如果没有匹配到addr2就会默认直到最后一行</li>\n<li>如果对于addr1是行号的话，如果新读入的行大于等于addr1行号，则匹配。如果小于addr1行号的话则不匹配，同理addr2是行号的话，新入得行小于addr2则匹配，大于addr2的话则不匹配。</li>\n</ol>\n<h2 id=\"基础命令\"><a href=\"#基础命令\" class=\"headerlink\" title=\"基础命令\"></a>基础命令</h2><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>命令</th>\n<th>语法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>替换</td>\n<td>s</td>\n<td>[address]s/pattern/replacement/flags</td>\n<td>替换匹配的内容这里的 <code>/</code>分隔符是可以替换成其他的</td>\n</tr>\n<tr>\n<td>删除</td>\n<td>d</td>\n<td>[address]d</td>\n<td>删除匹配的行</td>\n</tr>\n<tr>\n<td>插入</td>\n<td>i</td>\n<td>[line-address]i\\text</td>\n<td>在匹配行的前方插入文本</td>\n</tr>\n<tr>\n<td>追加</td>\n<td>a</td>\n<td>[line-address]a\\text</td>\n<td>在匹配行的后方插入文本</td>\n</tr>\n<tr>\n<td>行替换</td>\n<td>c</td>\n<td>[address]c\\text</td>\n<td>将匹配的行替换成文本text</td>\n</tr>\n<tr>\n<td>打印行</td>\n<td>p</td>\n<td>[address]p</td>\n<td>打印在模式空间中的行</td>\n</tr>\n<tr>\n<td>打印行号</td>\n<td>=</td>\n<td>[address]=</td>\n<td>打印当前行行号</td>\n</tr>\n<tr>\n<td>打印行</td>\n<td>l</td>\n<td>[address]l</td>\n<td>打印在模式空间中的行，同时显示控制字符</td>\n</tr>\n<tr>\n<td>转换字符</td>\n<td>y</td>\n<td>[address]y/SET1/SET2/</td>\n<td>将SET1中出现的字符替换成SET2中对应位置的字符</td>\n</tr>\n<tr>\n<td>读取下一行</td>\n<td>n</td>\n<td>[address]n</td>\n<td>将下一行的内容读取到模式空间</td>\n</tr>\n<tr>\n<td>读文件</td>\n<td>r</td>\n<td>[line-address]r file</td>\n<td>将指定的文件读取到匹配行之后</td>\n</tr>\n<tr>\n<td>写文件</td>\n<td>w</td>\n<td>[address]w file</td>\n<td>将匹配地址的所有行输出到指定的文件中</td>\n</tr>\n<tr>\n<td>退出</td>\n<td>q</td>\n<td>[line-address]q</td>\n<td>读取到匹配的行之后即退出</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"替换命令：s\"><a href=\"#替换命令：s\" class=\"headerlink\" title=\"替换命令：s\"></a>替换命令：s</h3><blockquote>\n<p>[address]s/pattern/replacement/flags</p>\n</blockquote>\n<p>address是指的地址，s是替换命令，pattern表示匹配表达式，replacement表示需要替换成的内容，flags表示替换的标志位，标志位一般有没有一种或多种如：</p>\n<ol>\n<li>n: 一个数字（取值范围1-512），表明仅替换前n个被pattern匹配的内容</li>\n<li>g: 表示全局替换，替换所有被pattern匹配的内容；</li>\n<li>p: 仅当行被pattern匹配时，打印模式空间的内容</li>\n<li>w file：仅当行被pattern匹配时，将模式空间的内容输出到文件file中；</li>\n</ol>\n<p>当flag没有的时候默认匹配第一个后面的不会替换<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;1,1,1,1,&quot;|sed &apos;s/,/*/&apos;</span><br><span class=\"line\">1*1,1,1,</span><br></pre></td></tr></table></figure></p>\n<p>当flag为n数字的时候表示第几次匹配的时候替换其他匹配不替换<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;1,1,1,1,&quot;|sed &apos;s/,/*/2&apos;</span><br><span class=\"line\">1,1*1,1,</span><br></pre></td></tr></table></figure></p>\n<p>当flag为g标志位时表示全局替换<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;1,1,1,1,&quot;|sed &apos;s/,/*/g&apos;</span><br><span class=\"line\">1*1*1*1*</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"删除命令：-address-d\"><a href=\"#删除命令：-address-d\" class=\"headerlink\" title=\"删除命令：[address]d\"></a>删除命令：[address]d</h3><p>删除命令用于删除一条或多条视频例如<code>1,3d</code>就会删除1-3行的内容。删除命令的原理是删除模式空间中的内容，所以一旦前面的命令是删除命令的时候，后面的命令将不会执行了，因为模式空间中的内容已经被清空了。这时候就会读取新的行到模式空间中来。</p>\n<p>删除1-5行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;1,5d&apos; temp</span><br></pre></td></tr></table></figure></p>\n<p>删除匹配root的行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;/root/d&apos; temp</span><br></pre></td></tr></table></figure></p>\n<p>删除地址对之间的行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;/root/,/mysql/d&apos; temp</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"插入-追加-替换行命令：i-a-c\"><a href=\"#插入-追加-替换行命令：i-a-c\" class=\"headerlink\" title=\"插入/追加/替换行命令：i/a/c\"></a>插入/追加/替换行命令：i/a/c</h3><blockquote>\n<p>[line-address]i\\text<br>[line-address]a\\text<br>[address]c\\text</p>\n</blockquote>\n<p>这三个当中插入和追加只能使用当个地址，替换可以使用多个地址<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;2a\\</span><br><span class=\"line\">--------------------------------------</span><br><span class=\"line\">&apos; temp</span><br><span class=\"line\">this is root page sa</span><br><span class=\"line\">i am not sa</span><br><span class=\"line\">--------------------------------------</span><br><span class=\"line\">haha</span><br><span class=\"line\">sdfasdf</span><br><span class=\"line\">sadfsadfdsfqwerqwer</span><br><span class=\"line\">wwqrewrq</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"打印命令：p-l\"><a href=\"#打印命令：p-l\" class=\"headerlink\" title=\"打印命令：p/l/=\"></a>打印命令：p/l/=</h3><blockquote>\n<p>[address]p<br>[address]l<br>[address]=</p>\n</blockquote>\n<p>下面的-n是指只显示匹配的行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -n &apos;2p&apos; temp</span><br><span class=\"line\">i am not sa</span><br><span class=\"line\"></span><br><span class=\"line\">sed &apos;=&apos; temp</span><br><span class=\"line\">1</span><br><span class=\"line\">this is root page sa</span><br><span class=\"line\">2</span><br><span class=\"line\">i am not sa</span><br><span class=\"line\">3</span><br><span class=\"line\">haha</span><br><span class=\"line\">4</span><br><span class=\"line\">sdfasdf</span><br><span class=\"line\">5</span><br><span class=\"line\">sadfsadfdsfqwerqwer</span><br><span class=\"line\">6</span><br><span class=\"line\">wwqrewrq</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"特殊字符\"><a href=\"#特殊字符\" class=\"headerlink\" title=\"特殊字符\"></a>特殊字符</h3><ol>\n<li>&amp; 字符这个字符是存储匹配模式里的内容</li>\n</ol>\n<p>在匹配的内容后面加ok<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;s/root/&amp; ok/g&apos; /etc/passwd</span><br></pre></td></tr></table></figure></p>\n<ol>\n<li>^ $ 开头结尾</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#将3到最后一行删除然后将std替换成wangchao</span><br><span class=\"line\">sed -e &apos;3,$d&apos; passwd  -e &apos;s/std/wangchao/g&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">查找到wangchao在该行的开头加一个hello ^这个表示开头 同理$表示结尾</span><br><span class=\"line\">sed &apos;/wangchao/s/^/ hello/&apos; /etc/passwd</span><br></pre></td></tr></table></figure>"},{"title":"南怀瑾遇高僧对话有感","date":"2017-12-25T11:54:00.000Z","_content":"\n最近几天看到南怀瑾先生和一个高僧的对话，短短2分钟的对话，我觉得非常有意思，所以在这边写一下。\n<!--more-->\n这段视频的意思主要内容就是，说南怀瑾先生听说有的大师很厉害，所以想去拜访这位大师请教一些事情，千辛万苦的终于找到了这位大师，就想问大师一些问题，这时候大师就对南怀瑾先生说：\n“你成就很高，知识渊博，有德高望重，我没有资格给你一些事情的解答，但是我可以给你几条我的经验”。看到这里我就很佩服这个大师，不会身居高点，而以高人一等的态度来对待别人，同时也不会轻易给别人一些人生忠告，不会说自己是最牛逼的。我觉得，轻易以人生导师给比人意见，是会惹很多麻烦的。现在社会很多人都要做第一，行业NO.1。这没有什么不会，只会会招致很多的麻烦和不必要。加上有些个性冲动，爱表现的就更加的会有一些麻烦事情，我觉得，谦虚还是不变的道理，自身实力过硬的情况下谦虚可能会失去很多机会，但是最后结果肯定不会太差的，所以还是得，谦虚，谦和。\n然后这位大师和南怀瑾先生说道，看世界上的任何东西，要轻松，不要看的太重。尤其眼睛看的美好的东西比如花，风景，美女等，你看到其实她不会得到什么好处，你也不会有什么实质性的好吃，可能有人会说，我看的舒服心情舒畅，对，这没有错，但是有没有更好的呢。就是要看的轻松，看任何东西不悲愤，不狂喜。这样看什么都会心情不大悲，不大喜，岂不很好。\n最后一句话，看似像一句心灵鸡汤，但是在那个年代的鸡汤，却一点也不齁，反而很醇。大师说道：“人的心其实就是那么大，真的装不了太多的东西，能把不好的丢掉就尽量丢掉”。其实我在想，有些事情丢掉何其的容易。但却不失我们学习的一个目标，做到悲不长记，喜不就留，生活才会舒适。\n以上只是我的一点点感悟，没人的处境，环境状态不一样，不可能一概套用，关键还得活的自己的一套，不影响他人，对得起自己，对得起身边的人，积极生活即可。\n","source":"_posts/talkbar.md","raw":"---\ntitle: 南怀瑾遇高僧对话有感\ndate: 2017-12-25 19:54:00\ntags: [随笔,南怀瑾]\ncategories: 随便说说\n---\n\n最近几天看到南怀瑾先生和一个高僧的对话，短短2分钟的对话，我觉得非常有意思，所以在这边写一下。\n<!--more-->\n这段视频的意思主要内容就是，说南怀瑾先生听说有的大师很厉害，所以想去拜访这位大师请教一些事情，千辛万苦的终于找到了这位大师，就想问大师一些问题，这时候大师就对南怀瑾先生说：\n“你成就很高，知识渊博，有德高望重，我没有资格给你一些事情的解答，但是我可以给你几条我的经验”。看到这里我就很佩服这个大师，不会身居高点，而以高人一等的态度来对待别人，同时也不会轻易给别人一些人生忠告，不会说自己是最牛逼的。我觉得，轻易以人生导师给比人意见，是会惹很多麻烦的。现在社会很多人都要做第一，行业NO.1。这没有什么不会，只会会招致很多的麻烦和不必要。加上有些个性冲动，爱表现的就更加的会有一些麻烦事情，我觉得，谦虚还是不变的道理，自身实力过硬的情况下谦虚可能会失去很多机会，但是最后结果肯定不会太差的，所以还是得，谦虚，谦和。\n然后这位大师和南怀瑾先生说道，看世界上的任何东西，要轻松，不要看的太重。尤其眼睛看的美好的东西比如花，风景，美女等，你看到其实她不会得到什么好处，你也不会有什么实质性的好吃，可能有人会说，我看的舒服心情舒畅，对，这没有错，但是有没有更好的呢。就是要看的轻松，看任何东西不悲愤，不狂喜。这样看什么都会心情不大悲，不大喜，岂不很好。\n最后一句话，看似像一句心灵鸡汤，但是在那个年代的鸡汤，却一点也不齁，反而很醇。大师说道：“人的心其实就是那么大，真的装不了太多的东西，能把不好的丢掉就尽量丢掉”。其实我在想，有些事情丢掉何其的容易。但却不失我们学习的一个目标，做到悲不长记，喜不就留，生活才会舒适。\n以上只是我的一点点感悟，没人的处境，环境状态不一样，不可能一概套用，关键还得活的自己的一套，不影响他人，对得起自己，对得起身边的人，积极生活即可。\n","slug":"talkbar","published":1,"updated":"2018-01-02T02:11:46.832Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjf0wg9o6000kv1tzf2tphbo7","content":"<p>最近几天看到南怀瑾先生和一个高僧的对话，短短2分钟的对话，我觉得非常有意思，所以在这边写一下。<br><a id=\"more\"></a><br>这段视频的意思主要内容就是，说南怀瑾先生听说有的大师很厉害，所以想去拜访这位大师请教一些事情，千辛万苦的终于找到了这位大师，就想问大师一些问题，这时候大师就对南怀瑾先生说：<br>“你成就很高，知识渊博，有德高望重，我没有资格给你一些事情的解答，但是我可以给你几条我的经验”。看到这里我就很佩服这个大师，不会身居高点，而以高人一等的态度来对待别人，同时也不会轻易给别人一些人生忠告，不会说自己是最牛逼的。我觉得，轻易以人生导师给比人意见，是会惹很多麻烦的。现在社会很多人都要做第一，行业NO.1。这没有什么不会，只会会招致很多的麻烦和不必要。加上有些个性冲动，爱表现的就更加的会有一些麻烦事情，我觉得，谦虚还是不变的道理，自身实力过硬的情况下谦虚可能会失去很多机会，但是最后结果肯定不会太差的，所以还是得，谦虚，谦和。<br>然后这位大师和南怀瑾先生说道，看世界上的任何东西，要轻松，不要看的太重。尤其眼睛看的美好的东西比如花，风景，美女等，你看到其实她不会得到什么好处，你也不会有什么实质性的好吃，可能有人会说，我看的舒服心情舒畅，对，这没有错，但是有没有更好的呢。就是要看的轻松，看任何东西不悲愤，不狂喜。这样看什么都会心情不大悲，不大喜，岂不很好。<br>最后一句话，看似像一句心灵鸡汤，但是在那个年代的鸡汤，却一点也不齁，反而很醇。大师说道：“人的心其实就是那么大，真的装不了太多的东西，能把不好的丢掉就尽量丢掉”。其实我在想，有些事情丢掉何其的容易。但却不失我们学习的一个目标，做到悲不长记，喜不就留，生活才会舒适。<br>以上只是我的一点点感悟，没人的处境，环境状态不一样，不可能一概套用，关键还得活的自己的一套，不影响他人，对得起自己，对得起身边的人，积极生活即可。</p>\n","site":{"data":{}},"excerpt":"<p>最近几天看到南怀瑾先生和一个高僧的对话，短短2分钟的对话，我觉得非常有意思，所以在这边写一下。<br>","more":"<br>这段视频的意思主要内容就是，说南怀瑾先生听说有的大师很厉害，所以想去拜访这位大师请教一些事情，千辛万苦的终于找到了这位大师，就想问大师一些问题，这时候大师就对南怀瑾先生说：<br>“你成就很高，知识渊博，有德高望重，我没有资格给你一些事情的解答，但是我可以给你几条我的经验”。看到这里我就很佩服这个大师，不会身居高点，而以高人一等的态度来对待别人，同时也不会轻易给别人一些人生忠告，不会说自己是最牛逼的。我觉得，轻易以人生导师给比人意见，是会惹很多麻烦的。现在社会很多人都要做第一，行业NO.1。这没有什么不会，只会会招致很多的麻烦和不必要。加上有些个性冲动，爱表现的就更加的会有一些麻烦事情，我觉得，谦虚还是不变的道理，自身实力过硬的情况下谦虚可能会失去很多机会，但是最后结果肯定不会太差的，所以还是得，谦虚，谦和。<br>然后这位大师和南怀瑾先生说道，看世界上的任何东西，要轻松，不要看的太重。尤其眼睛看的美好的东西比如花，风景，美女等，你看到其实她不会得到什么好处，你也不会有什么实质性的好吃，可能有人会说，我看的舒服心情舒畅，对，这没有错，但是有没有更好的呢。就是要看的轻松，看任何东西不悲愤，不狂喜。这样看什么都会心情不大悲，不大喜，岂不很好。<br>最后一句话，看似像一句心灵鸡汤，但是在那个年代的鸡汤，却一点也不齁，反而很醇。大师说道：“人的心其实就是那么大，真的装不了太多的东西，能把不好的丢掉就尽量丢掉”。其实我在想，有些事情丢掉何其的容易。但却不失我们学习的一个目标，做到悲不长记，喜不就留，生活才会舒适。<br>以上只是我的一点点感悟，没人的处境，环境状态不一样，不可能一概套用，关键还得活的自己的一套，不影响他人，对得起自己，对得起身边的人，积极生活即可。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjf0wg9n80000v1tziar3a0gn","category_id":"cjf0wg9ne0002v1tzg6h7d6lj","_id":"cjf0wg9nh0007v1tz6v6v3yee"},{"post_id":"cjf0wg9nc0001v1tzd1xoe8ht","category_id":"cjf0wg9ng0004v1tzkabrvmqb","_id":"cjf0wg9ni0009v1tznqy8njsh"},{"post_id":"cjf0wg9o2000cv1tz3kph3p8z","category_id":"cjf0wg9ng0004v1tzkabrvmqb","_id":"cjf0wg9o7000lv1tz0i2cbarv"},{"post_id":"cjf0wg9o5000hv1tzgch3fjgv","category_id":"cjf0wg9ng0004v1tzkabrvmqb","_id":"cjf0wg9o8000ov1tzrq5dumbj"},{"post_id":"cjf0wg9o3000ev1tzxbbjndwd","category_id":"cjf0wg9o6000jv1tz8pz4yafd","_id":"cjf0wg9o9000sv1tzuil1aau8"},{"post_id":"cjf0wg9o6000kv1tzf2tphbo7","category_id":"cjf0wg9o8000pv1tzkrynm39g","_id":"cjf0wg9oa000uv1tzwxfgls3k"}],"PostTag":[{"post_id":"cjf0wg9nc0001v1tzd1xoe8ht","tag_id":"cjf0wg9ng0005v1tzfwrku4ll","_id":"cjf0wg9ni000av1tzrawpr1d6"},{"post_id":"cjf0wg9nc0001v1tzd1xoe8ht","tag_id":"cjf0wg9nh0008v1tz7tklfief","_id":"cjf0wg9ni000bv1tzer5sukw2"},{"post_id":"cjf0wg9o2000cv1tz3kph3p8z","tag_id":"cjf0wg9ng0005v1tzfwrku4ll","_id":"cjf0wg9o8000nv1tzvvvbh0d2"},{"post_id":"cjf0wg9o2000cv1tz3kph3p8z","tag_id":"cjf0wg9o5000gv1tz4zh1dgru","_id":"cjf0wg9o8000qv1tz5b9t3vkq"},{"post_id":"cjf0wg9o3000ev1tzxbbjndwd","tag_id":"cjf0wg9o7000mv1tzoqgjy8ra","_id":"cjf0wg9oa000vv1tzyt9rugbk"},{"post_id":"cjf0wg9o3000ev1tzxbbjndwd","tag_id":"cjf0wg9o8000rv1tz0gmaifnf","_id":"cjf0wg9ob000wv1tzme23yiep"},{"post_id":"cjf0wg9o5000hv1tzgch3fjgv","tag_id":"cjf0wg9ng0005v1tzfwrku4ll","_id":"cjf0wg9ob000yv1tz4wcxg53m"},{"post_id":"cjf0wg9o5000hv1tzgch3fjgv","tag_id":"cjf0wg9o9000tv1tzp4hm6svh","_id":"cjf0wg9ob000zv1tzpuj9j0hb"},{"post_id":"cjf0wg9o6000kv1tzf2tphbo7","tag_id":"cjf0wg9ob000xv1tzd7282fz4","_id":"cjf0wg9oc0011v1tz6z19sky0"},{"post_id":"cjf0wg9o6000kv1tzf2tphbo7","tag_id":"cjf0wg9ob0010v1tz0nbrrhxz","_id":"cjf0wg9oc0012v1tz6gkwrojf"},{"post_id":"cjf0wg9n80000v1tziar3a0gn","tag_id":"cjf2bvkho0000pctznkk113kp","_id":"cjf2bvkhr0002pctzapznfxj6"},{"post_id":"cjf0wg9n80000v1tziar3a0gn","tag_id":"cjf2bvkhq0001pctz5zitnjia","_id":"cjf2bvkhr0003pctz1y1c49f7"}],"Tag":[{"name":"redis PHP","_id":"cjf0wg9nf0003v1tz1tr64eof"},{"name":"linux","_id":"cjf0wg9ng0005v1tzfwrku4ll"},{"name":"awk","_id":"cjf0wg9nh0008v1tz7tklfief"},{"name":"grep","_id":"cjf0wg9o5000gv1tz4zh1dgru"},{"name":"git","_id":"cjf0wg9o7000mv1tzoqgjy8ra"},{"name":"stackoverflow","_id":"cjf0wg9o8000rv1tz0gmaifnf"},{"name":"sed","_id":"cjf0wg9o9000tv1tzp4hm6svh"},{"name":"随笔","_id":"cjf0wg9ob000xv1tzd7282fz4"},{"name":"南怀瑾","_id":"cjf0wg9ob0010v1tz0nbrrhxz"},{"name":"redis","_id":"cjf2bvkho0000pctznkk113kp"},{"name":"PHP","_id":"cjf2bvkhq0001pctz5zitnjia"}]}}